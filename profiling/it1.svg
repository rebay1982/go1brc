<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>runtime.forEachP (11 samples, 0.08%)</title><rect x="21.7" y="261" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="24.74" y="271.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.02%)</title><rect x="1184.8" y="165" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1187.81" y="175.5" ></text>
</g>
<g >
<title>runtime.acquirem (47 samples, 0.36%)</title><rect x="74.5" y="229" width="4.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="77.53" y="239.5" ></text>
</g>
<g >
<title>strconv.ParseFloat (2,253 samples, 17.38%)</title><rect x="645.9" y="245" width="205.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="648.87" y="255.5" >strconv.ParseFloat</text>
</g>
<g >
<title>runtime.divRoundUp (7 samples, 0.05%)</title><rect x="80.9" y="229" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="83.91" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (804 samples, 6.20%)</title><rect x="84.2" y="229" width="73.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="87.18" y="239.5" >runtime...</text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (8 samples, 0.06%)</title><rect x="19.2" y="229" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="22.19" y="239.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).advance (43 samples, 0.33%)</title><rect x="383.5" y="245" width="3.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="386.46" y="255.5" ></text>
</g>
<g >
<title>runtime.gcStart.func1 (2 samples, 0.02%)</title><rect x="153.7" y="181" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="156.72" y="191.5" ></text>
</g>
<g >
<title>runtime.newAllocBits (3 samples, 0.02%)</title><rect x="982.1" y="69" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="985.11" y="79.5" ></text>
</g>
<g >
<title>runtime.add (187 samples, 1.44%)</title><rect x="390.4" y="245" width="17.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="393.38" y="255.5" ></text>
</g>
<g >
<title>runtime.madvise (2 samples, 0.02%)</title><rect x="10.1" y="149" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="13.09" y="159.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (7 samples, 0.05%)</title><rect x="154.6" y="149" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="157.63" y="159.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint8).Load (3 samples, 0.02%)</title><rect x="355.8" y="149" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="358.79" y="159.5" ></text>
</g>
<g >
<title>bufio.dropCR (35 samples, 0.27%)</title><rect x="328.8" y="229" width="3.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="331.85" y="239.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (5 samples, 0.04%)</title><rect x="14.2" y="181" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="17.19" y="191.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (52 samples, 0.40%)</title><rect x="148.8" y="133" width="4.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="151.81" y="143.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (2 samples, 0.02%)</title><rect x="998.5" y="85" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1001.49" y="95.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (3 samples, 0.02%)</title><rect x="981.7" y="69" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="984.74" y="79.5" ></text>
</g>
<g >
<title>runtime.profilealloc (7 samples, 0.05%)</title><rect x="154.6" y="213" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="157.63" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1,491 samples, 11.50%)</title><rect x="910.5" y="213" width="135.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="913.47" y="223.5" >runtime.mallocgc</text>
</g>
<g >
<title>os.(*File).read (315 samples, 2.43%)</title><rect x="354.6" y="229" width="28.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="357.61" y="239.5" >os..</text>
</g>
<g >
<title>runtime.futexsleep (5 samples, 0.04%)</title><rect x="21.9" y="165" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="24.92" y="175.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (60 samples, 0.46%)</title><rect x="51.7" y="197" width="5.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="54.69" y="207.5" ></text>
</g>
<g >
<title>runtime.gcmarknewobject (4 samples, 0.03%)</title><rect x="1000.6" y="197" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1003.58" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (4 samples, 0.03%)</title><rect x="149.1" y="117" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="152.08" y="127.5" ></text>
</g>
<g >
<title>runtime.markroot (35 samples, 0.27%)</title><rect x="149.4" y="117" width="3.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="152.44" y="127.5" ></text>
</g>
<g >
<title>main.main (7,107 samples, 54.82%)</title><rect x="204.1" y="261" width="646.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="207.06" y="271.5" >main.main</text>
</g>
<g >
<title>strconv.commonPrefixLenIgnoreCase (27 samples, 0.21%)</title><rect x="724.5" y="197" width="2.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="727.52" y="207.5" ></text>
</g>
<g >
<title>runtime.suspendG (3 samples, 0.02%)</title><rect x="32.0" y="181" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="35.03" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptM (2 samples, 0.02%)</title><rect x="22.4" y="181" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="25.38" y="191.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.02%)</title><rect x="1185.9" y="165" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1188.90" y="175.5" ></text>
</g>
<g >
<title>runtime.tophash (12 samples, 0.09%)</title><rect x="644.8" y="245" width="1.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="647.78" y="255.5" ></text>
</g>
<g >
<title>runtime.tgkill (2 samples, 0.02%)</title><rect x="22.4" y="149" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="25.38" y="159.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (9 samples, 0.07%)</title><rect x="890.7" y="181" width="0.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="893.72" y="191.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (2 samples, 0.02%)</title><rect x="28.0" y="197" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="31.02" y="207.5" ></text>
</g>
<g >
<title>runtime.notesleep (9 samples, 0.07%)</title><rect x="1186.3" y="181" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.27" y="191.5" ></text>
</g>
<g >
<title>syscall.Read (308 samples, 2.38%)</title><rect x="355.2" y="213" width="28.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="358.24" y="223.5" >s..</text>
</g>
<g >
<title>runtime.forEachP (8 samples, 0.06%)</title><rect x="22.7" y="245" width="0.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="25.74" y="255.5" ></text>
</g>
<g >
<title>runtime.entersyscall (7 samples, 0.05%)</title><rect x="355.4" y="165" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="358.43" y="175.5" ></text>
</g>
<g >
<title>runtime.findObject (4 samples, 0.03%)</title><rect x="354.1" y="149" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="357.06" y="159.5" ></text>
</g>
<g >
<title>runtime.divRoundUp (26 samples, 0.20%)</title><rect x="904.7" y="213" width="2.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="907.74" y="223.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (3 samples, 0.02%)</title><rect x="1000.3" y="197" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1003.31" y="207.5" ></text>
</g>
<g >
<title>runtime.scanblock (48 samples, 0.37%)</title><rect x="993.6" y="69" width="4.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="996.58" y="79.5" ></text>
</g>
<g >
<title>runtime.gcDrain (373 samples, 2.88%)</title><rect x="25.5" y="229" width="33.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="28.47" y="239.5" >ru..</text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (305 samples, 2.35%)</title><rect x="1007.5" y="181" width="27.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1010.50" y="191.5" >r..</text>
</g>
<g >
<title>runtime.findObject (33 samples, 0.25%)</title><rect x="46.6" y="197" width="3.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="49.59" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (8 samples, 0.06%)</title><rect x="988.8" y="197" width="0.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="991.84" y="207.5" ></text>
</g>
<g >
<title>runtime.preemptM (14 samples, 0.11%)</title><rect x="26.3" y="181" width="1.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="29.29" y="191.5" ></text>
</g>
<g >
<title>runtime.gcStart.func3 (3 samples, 0.02%)</title><rect x="1000.0" y="165" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1003.04" y="175.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (420 samples, 3.24%)</title><rect x="1046.2" y="213" width="38.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1049.19" y="223.5" >run..</text>
</g>
<g >
<title>runtime.(*mspan).heapBitsSmallForAddr (3 samples, 0.02%)</title><rect x="46.3" y="181" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="49.32" y="191.5" ></text>
</g>
<g >
<title>runtime.gcStart (15 samples, 0.12%)</title><rect x="998.9" y="197" width="1.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1001.95" y="207.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.02%)</title><rect x="383.3" y="229" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="386.28" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (3 samples, 0.02%)</title><rect x="136.4" y="85" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="139.43" y="95.5" ></text>
</g>
<g >
<title>runtime.systemstack (376 samples, 2.90%)</title><rect x="25.4" y="261" width="34.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="28.38" y="271.5" >ru..</text>
</g>
<g >
<title>runtime.mProf_Malloc (11 samples, 0.08%)</title><rect x="1043.8" y="181" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1046.82" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (53 samples, 0.41%)</title><rect x="977.7" y="85" width="4.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="980.74" y="95.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByteString (39 samples, 0.30%)</title><rect x="1175.7" y="213" width="3.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1178.71" y="223.5" ></text>
</g>
<g >
<title>syscall.Syscall (307 samples, 2.37%)</title><rect x="355.3" y="181" width="28.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="358.33" y="191.5" >s..</text>
</g>
<g >
<title>runtime.(*unwinder).initAt (5 samples, 0.04%)</title><rect x="28.7" y="165" width="0.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="31.66" y="175.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (5 samples, 0.04%)</title><rect x="30.0" y="149" width="0.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="33.02" y="159.5" ></text>
</g>
<g >
<title>runtime.mergeSummaries (2 samples, 0.02%)</title><rect x="12.1" y="149" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="15.09" y="159.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (62 samples, 0.48%)</title><rect x="993.3" y="117" width="5.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="996.30" y="127.5" ></text>
</g>
<g >
<title>runtime.getempty (3 samples, 0.02%)</title><rect x="149.2" y="85" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="152.17" y="95.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.02%)</title><rect x="1187.3" y="149" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.27" y="159.5" ></text>
</g>
<g >
<title>strings.Split (3,607 samples, 27.82%)</title><rect x="850.9" y="261" width="328.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="853.95" y="271.5" >strings.Split</text>
</g>
<g >
<title>runtime.(*gcBits).bitp (3 samples, 0.02%)</title><rect x="45.2" y="197" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="48.23" y="207.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (2 samples, 0.02%)</title><rect x="30.9" y="133" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="33.93" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (42 samples, 0.32%)</title><rect x="136.0" y="181" width="3.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="138.97" y="191.5" ></text>
</g>
<g >
<title>runtime.castogscanstatus (2 samples, 0.02%)</title><rect x="32.0" y="165" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="35.03" y="175.5" ></text>
</g>
<g >
<title>runtime.gcstopm (6 samples, 0.05%)</title><rect x="1185.6" y="197" width="0.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1188.63" y="207.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).Text (1,586 samples, 12.23%)</title><rect x="59.7" y="261" width="144.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="62.70" y="271.5" >bufio.(*Scanner).T..</text>
</g>
<g >
<title>runtime.getpid (2 samples, 0.02%)</title><rect x="26.3" y="149" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="29.29" y="159.5" ></text>
</g>
<g >
<title>runtime.scanobject (8 samples, 0.06%)</title><rect x="997.9" y="101" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1000.95" y="111.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (62 samples, 0.48%)</title><rect x="993.3" y="149" width="5.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="996.30" y="159.5" ></text>
</g>
<g >
<title>strconv.special (152 samples, 1.17%)</title><rect x="837.1" y="197" width="13.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="840.11" y="207.5" ></text>
</g>
<g >
<title>runtime.park_m (66 samples, 0.51%)</title><rect x="1179.3" y="261" width="6.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1182.26" y="271.5" ></text>
</g>
<g >
<title>runtime.spanOf (4 samples, 0.03%)</title><rect x="152.3" y="69" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="155.27" y="79.5" ></text>
</g>
<g >
<title>runtime.greyobject (9 samples, 0.07%)</title><rect x="49.6" y="197" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="52.59" y="207.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (103 samples, 0.79%)</title><rect x="989.6" y="197" width="9.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="992.57" y="207.5" ></text>
</g>
<g >
<title>runtime.scanblock (35 samples, 0.27%)</title><rect x="149.4" y="85" width="3.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="152.44" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (11 samples, 0.08%)</title><rect x="142.3" y="213" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="145.25" y="223.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (6 samples, 0.05%)</title><rect x="354.0" y="181" width="0.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="356.97" y="191.5" ></text>
</g>
<g >
<title>runtime.procresize (8 samples, 0.06%)</title><rect x="23.9" y="181" width="0.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="26.93" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).init (3 samples, 0.02%)</title><rect x="149.2" y="101" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="152.17" y="111.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.02%)</title><rect x="1187.5" y="133" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.45" y="143.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (7 samples, 0.05%)</title><rect x="19.9" y="229" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="22.92" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (40 samples, 0.31%)</title><rect x="136.1" y="165" width="3.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="139.06" y="175.5" ></text>
</g>
<g >
<title>indexbytebody (153 samples, 1.18%)</title><rect x="333.9" y="213" width="14.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="336.94" y="223.5" ></text>
</g>
<g >
<title>runtime.signalM (2 samples, 0.02%)</title><rect x="22.4" y="165" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="25.38" y="175.5" ></text>
</g>
<g >
<title>runtime.pcvalue (5 samples, 0.04%)</title><rect x="30.0" y="133" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="33.02" y="143.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.02%)</title><rect x="1187.5" y="149" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1190.45" y="159.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (53 samples, 0.41%)</title><rect x="148.7" y="165" width="4.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="151.72" y="175.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (7 samples, 0.05%)</title><rect x="139.0" y="85" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="141.98" y="95.5" ></text>
</g>
<g >
<title>syscall.read (308 samples, 2.38%)</title><rect x="355.2" y="197" width="28.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="358.24" y="207.5" >s..</text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (6 samples, 0.05%)</title><rect x="985.3" y="165" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="988.29" y="175.5" ></text>
</g>
<g >
<title>runtime.tracebackPCs (6 samples, 0.05%)</title><rect x="154.7" y="133" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="157.72" y="143.5" ></text>
</g>
<g >
<title>runtime.gcStart.func1 (2 samples, 0.02%)</title><rect x="999.1" y="165" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1002.13" y="175.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (3 samples, 0.02%)</title><rect x="28.8" y="149" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="31.84" y="159.5" ></text>
</g>
<g >
<title>runtime.traceAcquire (2 samples, 0.02%)</title><rect x="140.8" y="181" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="143.80" y="191.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (2 samples, 0.02%)</title><rect x="10.1" y="277" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="13.09" y="287.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.02%)</title><rect x="1187.7" y="229" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1190.72" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (58 samples, 0.45%)</title><rect x="977.4" y="133" width="5.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="980.37" y="143.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.02%)</title><rect x="1187.5" y="181" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1190.45" y="191.5" ></text>
</g>
<g >
<title>runtime.notetsleep (5 samples, 0.04%)</title><rect x="21.9" y="197" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="24.92" y="207.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).init (5 samples, 0.04%)</title><rect x="28.7" y="181" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="31.66" y="191.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (10 samples, 0.08%)</title><rect x="21.7" y="213" width="1.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="24.74" y="223.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.02%)</title><rect x="155.1" y="85" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="158.09" y="95.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (8 samples, 0.06%)</title><rect x="1043.9" y="133" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1046.91" y="143.5" ></text>
</g>
<g >
<title>gcWriteBarrier (14 samples, 0.11%)</title><rect x="890.3" y="229" width="1.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="893.27" y="239.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (318 samples, 2.45%)</title><rect x="172.7" y="229" width="29.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="175.75" y="239.5" >ru..</text>
</g>
<g >
<title>runtime.procyield (16 samples, 0.12%)</title><rect x="1188.0" y="213" width="1.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1191.00" y="223.5" ></text>
</g>
<g >
<title>runtime.mPark (9 samples, 0.07%)</title><rect x="1186.3" y="197" width="0.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1189.27" y="207.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (4 samples, 0.03%)</title><rect x="356.8" y="149" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="359.79" y="159.5" ></text>
</g>
<g >
<title>runtime.signalM (2 samples, 0.02%)</title><rect x="148.9" y="69" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="151.90" y="79.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (6 samples, 0.05%)</title><rect x="354.0" y="213" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="356.97" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*UnsafePointer).Load (2 samples, 0.02%)</title><rect x="16.8" y="229" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="19.83" y="239.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.02%)</title><rect x="24.4" y="101" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="27.38" y="111.5" ></text>
</g>
<g >
<title>runtime.releasem (26 samples, 0.20%)</title><rect x="201.7" y="229" width="2.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="204.69" y="239.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (7 samples, 0.05%)</title><rect x="978.6" y="53" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="981.65" y="63.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).reset (2 samples, 0.02%)</title><rect x="153.9" y="149" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="156.90" y="159.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerIdle (2 samples, 0.02%)</title><rect x="59.4" y="245" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="62.42" y="255.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (2 samples, 0.02%)</title><rect x="28.5" y="149" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="31.48" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (9 samples, 0.07%)</title><rect x="890.7" y="197" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="893.72" y="207.5" ></text>
</g>
<g >
<title>runtime.lock2 (17 samples, 0.13%)</title><rect x="1187.9" y="229" width="1.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1190.91" y="239.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (4 samples, 0.03%)</title><rect x="57.1" y="197" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="60.15" y="207.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (2 samples, 0.02%)</title><rect x="24.9" y="213" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="27.93" y="223.5" ></text>
</g>
<g >
<title>runtime.findfunc (2 samples, 0.02%)</title><rect x="31.8" y="149" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="34.85" y="159.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (3 samples, 0.02%)</title><rect x="21.4" y="261" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="24.38" y="271.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (2 samples, 0.02%)</title><rect x="21.1" y="245" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="24.10" y="255.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.02%)</title><rect x="1185.6" y="133" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1188.63" y="143.5" ></text>
</g>
<g >
<title>runtime.schedule (25 samples, 0.19%)</title><rect x="1185.4" y="229" width="2.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1188.45" y="239.5" ></text>
</g>
<g >
<title>runtime.findRunnable (22 samples, 0.17%)</title><rect x="1185.4" y="213" width="2.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1188.45" y="223.5" ></text>
</g>
<g >
<title>gcWriteBarrier (9 samples, 0.07%)</title><rect x="353.7" y="229" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="356.70" y="239.5" ></text>
</g>
<g >
<title>runtime.spanOf (2 samples, 0.02%)</title><rect x="891.4" y="149" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="894.36" y="159.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (3 samples, 0.02%)</title><rect x="1000.0" y="149" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1003.04" y="159.5" ></text>
</g>
<g >
<title>runtime.handoff (4 samples, 0.03%)</title><rect x="27.7" y="197" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="30.66" y="207.5" ></text>
</g>
<g >
<title>runtime.futex (9 samples, 0.07%)</title><rect x="1186.3" y="149" width="0.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1189.27" y="159.5" ></text>
</g>
<g >
<title>runtime.scanstack (26 samples, 0.20%)</title><rect x="29.7" y="181" width="2.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="32.66" y="191.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (44 samples, 0.34%)</title><rect x="17.1" y="245" width="4.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="20.10" y="255.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (4 samples, 0.03%)</title><rect x="154.9" y="117" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="157.91" y="127.5" ></text>
</g>
<g >
<title>memeqbody (481 samples, 3.71%)</title><rect x="592.1" y="229" width="43.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="595.08" y="239.5" >meme..</text>
</g>
<g >
<title>runtime.publicationBarrier (13 samples, 0.10%)</title><rect x="1044.8" y="197" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1047.82" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (12 samples, 0.09%)</title><rect x="23.6" y="229" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="26.56" y="239.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (3 samples, 0.02%)</title><rect x="50.4" y="197" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="53.41" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func2 (4 samples, 0.03%)</title><rect x="24.7" y="229" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="27.75" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (69 samples, 0.53%)</title><rect x="977.4" y="149" width="6.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="980.37" y="159.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (2 samples, 0.02%)</title><rect x="998.7" y="101" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1001.67" y="111.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (4 samples, 0.03%)</title><rect x="981.4" y="53" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="984.38" y="63.5" ></text>
</g>
<g >
<title>runtime.gcDrain (2 samples, 0.02%)</title><rect x="59.4" y="229" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="62.42" y="239.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (4 samples, 0.03%)</title><rect x="1044.2" y="101" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1047.18" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (4 samples, 0.03%)</title><rect x="137.8" y="69" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="140.79" y="79.5" ></text>
</g>
<g >
<title>runtime.systemstack (13 samples, 0.10%)</title><rect x="999.1" y="181" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1002.13" y="191.5" ></text>
</g>
<g >
<title>runtime.findObject (6 samples, 0.05%)</title><rect x="890.8" y="149" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="893.81" y="159.5" ></text>
</g>
<g >
<title>runtime.futexsleep (9 samples, 0.07%)</title><rect x="1186.3" y="165" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1189.27" y="175.5" ></text>
</g>
<g >
<title>runtime.memmove (169 samples, 1.30%)</title><rect x="157.4" y="229" width="15.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="160.36" y="239.5" ></text>
</g>
<g >
<title>bytes.IndexByte (238 samples, 1.84%)</title><rect x="332.0" y="229" width="21.7" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="335.03" y="239.5" >b..</text>
</g>
<g >
<title>runtime.gcMarkDone.forEachP.func5 (11 samples, 0.08%)</title><rect x="21.7" y="229" width="1.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="24.74" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (7 samples, 0.05%)</title><rect x="24.0" y="165" width="0.7" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="27.02" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (2 samples, 0.02%)</title><rect x="46.0" y="197" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="48.95" y="207.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.02%)</title><rect x="1187.5" y="197" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1190.45" y="207.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (12 samples, 0.09%)</title><rect x="356.1" y="165" width="1.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="359.06" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (6 samples, 0.05%)</title><rect x="24.0" y="133" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="27.02" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBits (51 samples, 0.39%)</title><rect x="1028.1" y="165" width="4.6" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1031.07" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (62 samples, 0.48%)</title><rect x="993.3" y="181" width="5.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="996.30" y="191.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).buildIndex (2 samples, 0.02%)</title><rect x="28.5" y="181" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="31.48" y="191.5" ></text>
</g>
<g >
<title>runtime.releasem (19 samples, 0.15%)</title><rect x="1084.4" y="213" width="1.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1087.42" y="223.5" ></text>
</g>
<g >
<title>runtime.resumeG (2 samples, 0.02%)</title><rect x="29.5" y="181" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="32.48" y="191.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (7 samples, 0.05%)</title><rect x="154.6" y="197" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="157.63" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).setSpans (3 samples, 0.02%)</title><rect x="980.1" y="53" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="983.10" y="63.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (54 samples, 0.42%)</title><rect x="977.7" y="101" width="5.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="980.74" y="111.5" ></text>
</g>
<g >
<title>runtime.systemstack (53 samples, 0.41%)</title><rect x="148.7" y="181" width="4.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="151.72" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (6 samples, 0.05%)</title><rect x="22.8" y="165" width="0.6" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="25.83" y="175.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (8 samples, 0.06%)</title><rect x="22.7" y="197" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="25.74" y="207.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (2 samples, 0.02%)</title><rect x="10.1" y="197" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="13.09" y="207.5" ></text>
</g>
<g >
<title>runtime.makeSpanClass (16 samples, 0.12%)</title><rect x="909.0" y="213" width="1.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="912.02" y="223.5" ></text>
</g>
<g >
<title>runtime.readUintptr (2 samples, 0.02%)</title><rect x="50.7" y="197" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="53.69" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).update (4 samples, 0.03%)</title><rect x="976.7" y="165" width="0.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="979.74" y="175.5" ></text>
</g>
<g >
<title>runtime.markroot (48 samples, 0.37%)</title><rect x="993.6" y="101" width="4.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="996.58" y="111.5" ></text>
</g>
<g >
<title>runtime.morestack (47 samples, 0.36%)</title><rect x="1185.3" y="277" width="4.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1188.27" y="287.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (2 samples, 0.02%)</title><rect x="10.1" y="165" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="13.09" y="175.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (23 samples, 0.18%)</title><rect x="155.3" y="213" width="2.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="158.27" y="223.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (10 samples, 0.08%)</title><rect x="139.9" y="165" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="142.89" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.02%)</title><rect x="1189.7" y="277" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1192.73" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (17 samples, 0.13%)</title><rect x="136.7" y="85" width="1.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="139.70" y="95.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readUnlock (5 samples, 0.04%)</title><rect x="354.7" y="197" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="357.70" y="207.5" ></text>
</g>
<g >
<title>runtime.alignUp (22 samples, 0.17%)</title><rect x="78.8" y="229" width="2.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="81.81" y="239.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (2 samples, 0.02%)</title><rect x="155.1" y="101" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="158.09" y="111.5" ></text>
</g>
<g >
<title>runtime.signalM (4 samples, 0.03%)</title><rect x="29.1" y="165" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="32.11" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).update (2 samples, 0.02%)</title><rect x="135.8" y="181" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="138.79" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (3 samples, 0.02%)</title><rect x="141.0" y="181" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="143.98" y="191.5" ></text>
</g>
<g >
<title>runtime.gcmarknewobject (3 samples, 0.02%)</title><rect x="154.4" y="213" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="157.36" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (134 samples, 1.03%)</title><rect x="975.9" y="181" width="12.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="978.92" y="191.5" ></text>
</g>
<g >
<title>runtime.getMCache (21 samples, 0.16%)</title><rect x="81.5" y="229" width="2.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="84.54" y="239.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (11 samples, 0.08%)</title><rect x="13.1" y="181" width="1.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="16.09" y="191.5" ></text>
</g>
<g >
<title>indexbytebody (170 samples, 1.31%)</title><rect x="1160.2" y="213" width="15.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1163.24" y="223.5" ></text>
</g>
<g >
<title>runtime.signalM (14 samples, 0.11%)</title><rect x="26.3" y="165" width="1.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="29.29" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.05%)</title><rect x="154.6" y="165" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="157.63" y="175.5" ></text>
</g>
<g >
<title>runtime.preemptM (2 samples, 0.02%)</title><rect x="148.9" y="85" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="151.90" y="95.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (62 samples, 0.48%)</title><rect x="993.3" y="133" width="5.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="996.30" y="143.5" ></text>
</g>
<g >
<title>runtime.sweepone (122 samples, 0.94%)</title><rect x="10.3" y="261" width="11.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.27" y="271.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (3 samples, 0.02%)</title><rect x="136.4" y="69" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="139.43" y="79.5" ></text>
</g>
<g >
<title>runtime/internal/sys.LeadingZeros64 (3 samples, 0.02%)</title><rect x="12.4" y="149" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="15.37" y="159.5" ></text>
</g>
<g >
<title>runtime.(*bmap).keys (33 samples, 0.25%)</title><rect x="387.4" y="245" width="3.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="390.37" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (5 samples, 0.04%)</title><rect x="14.7" y="197" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="17.73" y="207.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.EpollWait (3 samples, 0.02%)</title><rect x="1183.9" y="197" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1186.90" y="207.5" ></text>
</g>
<g >
<title>all (12,964 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (35 samples, 0.27%)</title><rect x="149.4" y="101" width="3.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="152.44" y="111.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.02%)</title><rect x="1184.8" y="197" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1187.81" y="207.5" ></text>
</g>
<g >
<title>runtime.notesleep (3 samples, 0.02%)</title><rect x="1185.6" y="165" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1188.63" y="175.5" ></text>
</g>
<g >
<title>strings.genSplit (3,594 samples, 27.72%)</title><rect x="852.1" y="245" width="327.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="855.13" y="255.5" >strings.genSplit</text>
</g>
<g >
<title>runtime.step (2 samples, 0.02%)</title><rect x="28.9" y="117" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="31.93" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (67 samples, 0.52%)</title><rect x="135.2" y="197" width="6.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="138.15" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (2 samples, 0.02%)</title><rect x="993.4" y="101" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="996.39" y="111.5" ></text>
</g>
<g >
<title>runtime.tracebackPCs (6 samples, 0.05%)</title><rect x="1044.1" y="117" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1047.09" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (2 samples, 0.02%)</title><rect x="148.9" y="101" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="151.90" y="111.5" ></text>
</g>
<g >
<title>runtime.scanblock (7 samples, 0.05%)</title><rect x="31.2" y="149" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="34.21" y="159.5" ></text>
</g>
<g >
<title>runtime.ready (2 samples, 0.02%)</title><rect x="29.5" y="165" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="32.48" y="175.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1,578 samples, 12.17%)</title><rect x="60.4" y="245" width="143.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="63.43" y="255.5" >runtime.slicebytet..</text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (38 samples, 0.29%)</title><rect x="136.2" y="117" width="3.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="139.16" y="127.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocToCache (2 samples, 0.02%)</title><rect x="138.3" y="85" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="141.34" y="95.5" ></text>
</g>
<g >
<title>runtime.finishsweep_m (3 samples, 0.02%)</title><rect x="153.9" y="165" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="156.90" y="175.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (20 samples, 0.15%)</title><rect x="57.5" y="213" width="1.8" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="60.51" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (373 samples, 2.88%)</title><rect x="25.5" y="245" width="33.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="28.47" y="255.5" >ru..</text>
</g>
<g >
<title>runtime.(*gcControllerState).trigger (2 samples, 0.02%)</title><rect x="1000.4" y="181" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1003.40" y="191.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (2 samples, 0.02%)</title><rect x="153.7" y="165" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="156.72" y="175.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (9 samples, 0.07%)</title><rect x="890.7" y="213" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="893.72" y="223.5" ></text>
</g>
<g >
<title>strconv.parseFloatPrefix (2,177 samples, 16.79%)</title><rect x="652.8" y="229" width="198.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="655.79" y="239.5" >strconv.parseFloatPrefix</text>
</g>
<g >
<title>runtime.mcall (66 samples, 0.51%)</title><rect x="1179.3" y="277" width="6.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1182.26" y="287.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.02%)</title><rect x="1184.8" y="149" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1187.81" y="159.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (45 samples, 0.35%)</title><rect x="1185.4" y="261" width="4.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1188.36" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (50 samples, 0.39%)</title><rect x="10.6" y="245" width="4.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="13.64" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (17 samples, 0.13%)</title><rect x="1187.9" y="245" width="1.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1190.91" y="255.5" ></text>
</g>
<g >
<title>runtime.sysUnused (2 samples, 0.02%)</title><rect x="10.1" y="181" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="13.09" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (38 samples, 0.29%)</title><rect x="136.2" y="133" width="3.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="139.16" y="143.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (3 samples, 0.02%)</title><rect x="27.7" y="181" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="30.66" y="191.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (9 samples, 0.07%)</title><rect x="890.7" y="165" width="0.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="893.72" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (11 samples, 0.08%)</title><rect x="980.4" y="53" width="1.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="983.38" y="63.5" ></text>
</g>
<g >
<title>runtime.makeSpanClass (8 samples, 0.06%)</title><rect x="83.5" y="229" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="86.45" y="239.5" ></text>
</g>
<g >
<title>runtime.tgkill (2 samples, 0.02%)</title><rect x="148.9" y="53" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="151.90" y="63.5" ></text>
</g>
<g >
<title>runtime.readUintptr (25 samples, 0.19%)</title><rect x="1035.3" y="181" width="2.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1038.26" y="191.5" ></text>
</g>
<g >
<title>strconv.readFloat (1,210 samples, 9.33%)</title><rect x="727.0" y="197" width="110.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="729.97" y="207.5" >strconv.readF..</text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.02%)</title><rect x="28.9" y="133" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="31.93" y="143.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (2 samples, 0.02%)</title><rect x="10.1" y="229" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.09" y="239.5" ></text>
</g>
<g >
<title>runtime.tgkill (12 samples, 0.09%)</title><rect x="26.5" y="149" width="1.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="29.47" y="159.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (287 samples, 2.21%)</title><rect x="357.2" y="149" width="26.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="360.16" y="159.5" >r..</text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (6 samples, 0.05%)</title><rect x="22.8" y="181" width="0.6" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="25.83" y="191.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (3 samples, 0.02%)</title><rect x="153.9" y="181" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="156.90" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (53 samples, 0.41%)</title><rect x="148.7" y="197" width="4.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="151.72" y="207.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (48 samples, 0.37%)</title><rect x="993.6" y="85" width="4.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="996.58" y="95.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.02%)</title><rect x="24.4" y="85" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="27.38" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (2 samples, 0.02%)</title><rect x="142.1" y="181" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.07" y="191.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.02%)</title><rect x="1185.9" y="181" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1188.90" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (11 samples, 0.08%)</title><rect x="21.7" y="245" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="24.74" y="255.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (2 samples, 0.02%)</title><rect x="138.6" y="85" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="141.61" y="95.5" ></text>
</g>
<g >
<title>runtime.casgstatus (5 samples, 0.04%)</title><rect x="356.3" y="149" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="359.34" y="159.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).Scan (972 samples, 7.50%)</title><rect x="295.0" y="245" width="88.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="297.99" y="255.5" >bufio.(*Sc..</text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (6 samples, 0.05%)</title><rect x="24.0" y="117" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="27.02" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (2 samples, 0.02%)</title><rect x="28.0" y="213" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="31.02" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (5 samples, 0.04%)</title><rect x="22.8" y="149" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="25.83" y="159.5" ></text>
</g>
<g >
<title>runtime.gcStart (8 samples, 0.06%)</title><rect x="153.5" y="213" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="156.54" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bytep (3 samples, 0.02%)</title><rect x="975.3" y="197" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="978.28" y="207.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (3 samples, 0.02%)</title><rect x="355.4" y="149" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="358.43" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (73 samples, 0.56%)</title><rect x="977.1" y="165" width="6.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="980.10" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (3 samples, 0.02%)</title><rect x="979.7" y="53" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="982.74" y="63.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (64 samples, 0.49%)</title><rect x="347.9" y="213" width="5.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="350.87" y="223.5" ></text>
</g>
<g >
<title>runtime.resetspinning (2 samples, 0.02%)</title><rect x="1187.5" y="213" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1190.45" y="223.5" ></text>
</g>
<g >
<title>strconv.atof64exact (584 samples, 4.50%)</title><rect x="671.4" y="197" width="53.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="674.36" y="207.5" >strco..</text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.02%)</title><rect x="1184.8" y="181" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1187.81" y="191.5" ></text>
</g>
<g >
<title>runtime.callers (7 samples, 0.05%)</title><rect x="154.6" y="181" width="0.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="157.63" y="191.5" ></text>
</g>
<g >
<title>runtime.strhash (27 samples, 0.21%)</title><rect x="642.3" y="229" width="2.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="645.32" y="239.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (15 samples, 0.12%)</title><rect x="11.3" y="165" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="14.27" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (17 samples, 0.13%)</title><rect x="26.1" y="197" width="1.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="29.11" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).findRunnableGCWorker (2 samples, 0.02%)</title><rect x="1179.9" y="213" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1182.90" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (27 samples, 0.21%)</title><rect x="979.3" y="69" width="2.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="982.29" y="79.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).heapGoalInternal (2 samples, 0.02%)</title><rect x="1000.4" y="165" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1003.40" y="175.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.forEachP.func6 (8 samples, 0.06%)</title><rect x="22.7" y="213" width="0.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="25.74" y="223.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (9 samples, 0.07%)</title><rect x="23.8" y="197" width="0.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="26.84" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.05%)</title><rect x="354.0" y="197" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="356.97" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.04%)</title><rect x="24.7" y="245" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="27.75" y="255.5" ></text>
</g>
<g >
<title>runtime.heapSetType (402 samples, 3.10%)</title><rect x="1000.9" y="197" width="36.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1003.95" y="207.5" >run..</text>
</g>
<g >
<title>aeshashbody (354 samples, 2.73%)</title><rect x="559.9" y="229" width="32.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="562.86" y="239.5" >ae..</text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (10 samples, 0.08%)</title><rect x="139.9" y="181" width="0.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="142.89" y="191.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.02%)</title><rect x="1000.0" y="133" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1003.04" y="143.5" ></text>
</g>
<g >
<title>runtime.newArenaMayUnlock (4 samples, 0.03%)</title><rect x="981.4" y="37" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="984.38" y="47.5" ></text>
</g>
<g >
<title>runtime.profilealloc (11 samples, 0.08%)</title><rect x="1043.8" y="197" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1046.82" y="207.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (2 samples, 0.02%)</title><rect x="10.1" y="245" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="13.09" y="255.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).reset (8 samples, 0.06%)</title><rect x="999.3" y="133" width="0.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1002.31" y="143.5" ></text>
</g>
<g >
<title>strings.Index (85 samples, 0.66%)</title><rect x="1151.8" y="229" width="7.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1154.77" y="239.5" ></text>
</g>
<g >
<title>strings.Count (721 samples, 5.56%)</title><rect x="1086.1" y="229" width="65.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1089.14" y="239.5" >strings..</text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (3 samples, 0.02%)</title><rect x="1183.9" y="181" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1186.90" y="191.5" ></text>
</g>
<g >
<title>runtime.spanOf (9 samples, 0.07%)</title><rect x="50.9" y="197" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="53.87" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (38 samples, 0.29%)</title><rect x="136.2" y="101" width="3.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="139.16" y="111.5" ></text>
</g>
<g >
<title>runtime.(*scavengeIndex).free (3 samples, 0.02%)</title><rect x="12.6" y="165" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="15.64" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (3 samples, 0.02%)</title><rect x="31.3" y="133" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="34.30" y="143.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (14 samples, 0.11%)</title><rect x="30.6" y="165" width="1.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="33.57" y="175.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (8 samples, 0.06%)</title><rect x="11.4" y="149" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="14.37" y="159.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (6 samples, 0.05%)</title><rect x="354.0" y="165" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="356.97" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (5 samples, 0.04%)</title><rect x="14.7" y="181" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="17.73" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (9 samples, 0.07%)</title><rect x="1043.8" y="149" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1046.82" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (20 samples, 0.15%)</title><rect x="15.2" y="245" width="1.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="18.19" y="255.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (2 samples, 0.02%)</title><rect x="28.5" y="165" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="31.48" y="175.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (8 samples, 0.06%)</title><rect x="29.8" y="165" width="0.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="32.75" y="175.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (38 samples, 0.29%)</title><rect x="32.3" y="197" width="3.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="35.30" y="207.5" ></text>
</g>
<g >
<title>countbody (483 samples, 3.73%)</title><rect x="1097.9" y="213" width="43.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1100.89" y="223.5" >coun..</text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfUnchecked (4 samples, 0.03%)</title><rect x="46.2" y="197" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="49.23" y="207.5" ></text>
</g>
<g >
<title>runtime.callers (9 samples, 0.07%)</title><rect x="1043.8" y="165" width="0.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1046.82" y="175.5" ></text>
</g>
<g >
<title>runtime.findRunnable (58 samples, 0.45%)</title><rect x="1179.4" y="229" width="5.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1182.44" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (6 samples, 0.05%)</title><rect x="354.6" y="213" width="0.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="357.61" y="223.5" ></text>
</g>
<g >
<title>runtime.futexsleep (35 samples, 0.27%)</title><rect x="1180.6" y="181" width="3.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1183.62" y="191.5" ></text>
</g>
<g >
<title>runtime.main (12,300 samples, 94.88%)</title><rect x="59.7" y="277" width="1119.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="62.70" y="287.5" >runtime.main</text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.02%)</title><rect x="10.1" y="213" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="13.09" y="223.5" ></text>
</g>
<g >
<title>runtime.scanobject (9 samples, 0.07%)</title><rect x="152.6" y="117" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="155.63" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (4 samples, 0.03%)</title><rect x="988.5" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="991.48" y="175.5" ></text>
</g>
<g >
<title>runtime.futex (5 samples, 0.04%)</title><rect x="21.9" y="149" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="24.92" y="159.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (2 samples, 0.02%)</title><rect x="982.4" y="69" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="985.38" y="79.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (8 samples, 0.06%)</title><rect x="999.3" y="165" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1002.31" y="175.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (112 samples, 0.86%)</title><rect x="143.3" y="213" width="10.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="146.35" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).CompareAndSwap (3 samples, 0.02%)</title><rect x="16.6" y="229" width="0.2" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="19.55" y="239.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (4 samples, 0.03%)</title><rect x="20.6" y="229" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="23.65" y="239.5" ></text>
</g>
<g >
<title>runtime.bgsweep (125 samples, 0.96%)</title><rect x="10.3" y="277" width="11.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="13.27" y="287.5" ></text>
</g>
<g >
<title>runtime.schedule (65 samples, 0.50%)</title><rect x="1179.4" y="245" width="5.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1182.35" y="255.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (10 samples, 0.08%)</title><rect x="982.7" y="117" width="1.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="985.74" y="127.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.02%)</title><rect x="1187.5" y="165" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1190.45" y="175.5" ></text>
</g>
<g >
<title>internal/bytealg.CountString (109 samples, 0.84%)</title><rect x="1141.8" y="213" width="10.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1144.85" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (8 samples, 0.06%)</title><rect x="22.7" y="229" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="25.74" y="239.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (68 samples, 0.52%)</title><rect x="1037.5" y="197" width="6.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1040.54" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.05%)</title><rect x="153.6" y="197" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="156.63" y="207.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (5 samples, 0.04%)</title><rect x="354.7" y="181" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="357.70" y="191.5" ></text>
</g>
<g >
<title>runtime.scanobject (238 samples, 1.84%)</title><rect x="35.9" y="213" width="21.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="38.85" y="223.5" >r..</text>
</g>
<g >
<title>strconv.atof64 (2,134 samples, 16.46%)</title><rect x="656.7" y="213" width="194.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="659.71" y="223.5" >strconv.atof64</text>
</g>
<g >
<title>runtime.notetsleep_internal (5 samples, 0.04%)</title><rect x="21.9" y="181" width="0.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="24.92" y="191.5" ></text>
</g>
<g >
<title>runtime.notesleep (36 samples, 0.28%)</title><rect x="1180.5" y="197" width="3.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1183.53" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (53 samples, 0.41%)</title><rect x="148.7" y="149" width="4.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="151.72" y="159.5" ></text>
</g>
<g >
<title>runtime.findfunc (2 samples, 0.02%)</title><rect x="29.8" y="149" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="32.84" y="159.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (287 samples, 2.21%)</title><rect x="357.2" y="165" width="26.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="360.16" y="175.5" >s..</text>
</g>
<g >
<title>runtime.markroot (83 samples, 0.64%)</title><rect x="28.3" y="213" width="7.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="31.30" y="223.5" ></text>
</g>
<g >
<title>runtime.resetspinning (3 samples, 0.02%)</title><rect x="1184.8" y="229" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1187.81" y="239.5" ></text>
</g>
<g >
<title>runtime.futexsleep (3 samples, 0.02%)</title><rect x="1185.6" y="149" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1188.63" y="159.5" ></text>
</g>
<g >
<title>runtime.makeslice (2,137 samples, 16.48%)</title><rect x="891.6" y="229" width="194.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="894.63" y="239.5" >runtime.makeslice</text>
</g>
<g >
<title>runtime.gcMarkTermination (13 samples, 0.10%)</title><rect x="23.5" y="245" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="26.47" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).partialSwept (5 samples, 0.04%)</title><rect x="983.7" y="165" width="0.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="986.75" y="175.5" ></text>
</g>
<g >
<title>runtime.netpoll (3 samples, 0.02%)</title><rect x="1183.9" y="213" width="0.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1186.90" y="223.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (5 samples, 0.04%)</title><rect x="30.7" y="149" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="33.66" y="159.5" ></text>
</g>
<g >
<title>strings.IndexByte (217 samples, 1.67%)</title><rect x="1159.5" y="229" width="19.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1162.51" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (11 samples, 0.08%)</title><rect x="141.3" y="197" width="1.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="144.25" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (50 samples, 0.39%)</title><rect x="10.6" y="229" width="4.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="13.64" y="239.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (19 samples, 0.15%)</title><rect x="11.3" y="181" width="1.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="14.27" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (62 samples, 0.48%)</title><rect x="993.3" y="165" width="5.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="996.30" y="175.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).run (2 samples, 0.02%)</title><rect x="10.1" y="261" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="13.09" y="271.5" ></text>
</g>
<g >
<title>runtime.nanotime (2 samples, 0.02%)</title><rect x="24.7" y="213" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="27.75" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (6 samples, 0.05%)</title><rect x="24.0" y="149" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="27.02" y="159.5" ></text>
</g>
<g >
<title>runtime.scanblock (38 samples, 0.29%)</title><rect x="32.3" y="181" width="3.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="35.30" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptM (4 samples, 0.03%)</title><rect x="29.1" y="181" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="32.11" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).initHeapBits (11 samples, 0.08%)</title><rect x="982.7" y="133" width="1.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="985.65" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (7 samples, 0.05%)</title><rect x="978.6" y="69" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="981.65" y="79.5" ></text>
</g>
<g >
<title>runtime.bool2int (2 samples, 0.02%)</title><rect x="904.6" y="213" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="907.56" y="223.5" ></text>
</g>
<g >
<title>runtime.preemptall (3 samples, 0.02%)</title><rect x="22.4" y="197" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="25.38" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (27 samples, 0.21%)</title><rect x="22.7" y="261" width="2.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="25.74" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (146 samples, 1.13%)</title><rect x="975.6" y="197" width="13.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="978.55" y="207.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (4 samples, 0.03%)</title><rect x="1187.1" y="197" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1190.09" y="207.5" ></text>
</g>
<g >
<title>runtime.stealWork (4 samples, 0.03%)</title><rect x="1184.4" y="213" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1187.36" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (3 samples, 0.02%)</title><rect x="982.1" y="53" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="985.11" y="63.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.02%)</title><rect x="1185.9" y="149" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1188.90" y="159.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (2,591 samples, 19.99%)</title><rect x="408.9" y="245" width="235.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="411.95" y="255.5" >runtime.mapaccess2_faststr</text>
</g>
<g >
<title>runtime.gcBgMarkWorker (418 samples, 3.22%)</title><rect x="21.7" y="277" width="38.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="24.65" y="287.5" >run..</text>
</g>
<g >
<title>runtime.(*mheap).alloc (39 samples, 0.30%)</title><rect x="136.1" y="149" width="3.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="139.06" y="159.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Add (25 samples, 0.19%)</title><rect x="985.8" y="165" width="2.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="988.84" y="175.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Add (2 samples, 0.02%)</title><rect x="20.4" y="213" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="23.38" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (80 samples, 0.62%)</title><rect x="135.0" y="213" width="7.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="137.97" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (12 samples, 0.09%)</title><rect x="984.2" y="165" width="1.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="987.20" y="175.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (9 samples, 0.07%)</title><rect x="23.8" y="213" width="0.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="26.84" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (14 samples, 0.11%)</title><rect x="15.3" y="229" width="1.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="18.28" y="239.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (2 samples, 0.02%)</title><rect x="31.8" y="165" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="34.85" y="175.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (50 samples, 0.39%)</title><rect x="10.6" y="213" width="4.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="13.64" y="223.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.02%)</title><rect x="1184.8" y="213" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1187.81" y="223.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.02%)</title><rect x="152.1" y="69" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="155.08" y="79.5" ></text>
</g>
<g >
<title>runtime.tgkill (4 samples, 0.03%)</title><rect x="29.1" y="149" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="32.11" y="159.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (42 samples, 0.32%)</title><rect x="28.5" y="197" width="3.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="31.48" y="207.5" ></text>
</g>
<g >
<title>runtime.step (2 samples, 0.02%)</title><rect x="30.3" y="117" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="33.30" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (41 samples, 0.32%)</title><rect x="10.9" y="197" width="3.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="13.91" y="207.5" ></text>
</g>
<g >
<title>runtime.getMCache (21 samples, 0.16%)</title><rect x="907.1" y="213" width="1.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="910.11" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.02%)</title><rect x="1187.2" y="181" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1190.18" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (54 samples, 0.42%)</title><rect x="977.7" y="117" width="5.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="980.74" y="127.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (27 samples, 0.21%)</title><rect x="1185.4" y="245" width="2.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1188.45" y="255.5" ></text>
</g>
<g >
<title>runtime.acquirem (29 samples, 0.22%)</title><rect x="901.4" y="213" width="2.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="904.37" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (2 samples, 0.02%)</title><rect x="148.9" y="117" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="151.90" y="127.5" ></text>
</g>
<g >
<title>runtime.mPark (36 samples, 0.28%)</title><rect x="1180.5" y="213" width="3.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1183.53" y="223.5" ></text>
</g>
<g >
<title>bufio.ScanLines (127 samples, 0.98%)</title><rect x="317.3" y="229" width="11.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="320.29" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (5 samples, 0.04%)</title><rect x="45.5" y="197" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="48.50" y="207.5" ></text>
</g>
<g >
<title>runtime.futex (35 samples, 0.27%)</title><rect x="1180.6" y="165" width="3.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1183.62" y="175.5" ></text>
</g>
<g >
<title>runtime.heapBitsSlice (28 samples, 0.22%)</title><rect x="1032.7" y="165" width="2.6" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1035.72" y="175.5" ></text>
</g>
<g >
<title>runtime.bucketShift (17 samples, 0.13%)</title><rect x="407.4" y="245" width="1.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="410.40" y="255.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (11 samples, 0.08%)</title><rect x="984.3" y="149" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="987.29" y="159.5" ></text>
</g>
<g >
<title>runtime.memequal (71 samples, 0.55%)</title><rect x="635.9" y="229" width="6.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="638.86" y="239.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.02%)</title><rect x="1187.2" y="165" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1190.18" y="175.5" ></text>
</g>
<g >
<title>runtime.add (6 samples, 0.05%)</title><rect x="904.0" y="213" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="907.01" y="223.5" ></text>
</g>
<g >
<title>runtime.finishsweep_m (8 samples, 0.06%)</title><rect x="999.3" y="149" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1002.31" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (22 samples, 0.17%)</title><rect x="26.0" y="213" width="2.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="29.02" y="223.5" ></text>
</g>
<g >
<title>runtime.mPark (3 samples, 0.02%)</title><rect x="1185.6" y="181" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1188.63" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (8 samples, 0.06%)</title><rect x="988.1" y="181" width="0.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="991.11" y="191.5" ></text>
</g>
</g>
</svg>
