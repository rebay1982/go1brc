<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>runtime.deductSweepCredit (1 samples, 0.02%)</title><rect x="263.2" y="149" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="266.16" y="159.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.02%)</title><rect x="1188.4" y="149" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1191.41" y="159.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (1 samples, 0.02%)</title><rect x="262.1" y="53" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="265.10" y="63.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (169 samples, 3.80%)</title><rect x="24.1" y="261" width="44.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="27.08" y="271.5" >runt..</text>
</g>
<g >
<title>runtime.goschedImpl (6 samples, 0.14%)</title><rect x="1188.1" y="229" width="1.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1191.14" y="239.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="25.7" y="133" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="28.67" y="143.5" ></text>
</g>
<g >
<title>runtime.bgsweep (53 samples, 1.19%)</title><rect x="10.0" y="261" width="14.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (19 samples, 0.43%)</title><rect x="18.2" y="229" width="5.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="21.24" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (10 samples, 0.23%)</title><rect x="290.0" y="133" width="2.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="292.99" y="143.5" ></text>
</g>
<g >
<title>runtime.scanobject (4 samples, 0.09%)</title><rect x="67.4" y="197" width="1.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="70.38" y="207.5" ></text>
</g>
<g >
<title>runtime.execute (1 samples, 0.02%)</title><rect x="1184.4" y="213" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1187.42" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.05%)</title><rect x="1188.7" y="165" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1191.67" y="175.5" ></text>
</g>
<g >
<title>main.GetSplit (198 samples, 4.46%)</title><rect x="497.5" y="245" width="52.6" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="500.46" y="255.5" >main...</text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (2 samples, 0.05%)</title><rect x="257.6" y="53" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="260.58" y="63.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="1187.9" y="197" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1190.87" y="207.5" ></text>
</g>
<g >
<title>runtime.notesleep (6 samples, 0.14%)</title><rect x="1185.2" y="181" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1188.22" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (2 samples, 0.05%)</title><rect x="293.4" y="101" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="296.44" y="111.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.02%)</title><rect x="1039.9" y="133" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1042.91" y="143.5" ></text>
</g>
<g >
<title>bufio.dropCR (49 samples, 1.10%)</title><rect x="960.5" y="213" width="13.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="963.48" y="223.5" ></text>
</g>
<g >
<title>runtime.mcall (14 samples, 0.32%)</title><rect x="1184.4" y="261" width="3.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1187.42" y="271.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (229 samples, 5.16%)</title><rect x="1040.2" y="149" width="60.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1043.18" y="159.5" >syscal..</text>
</g>
<g >
<title>runtime.(*gcControllerState).update (1 samples, 0.02%)</title><rect x="256.3" y="165" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="259.25" y="175.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.02%)</title><rect x="17.2" y="181" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="20.17" y="191.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="1187.3" y="149" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1190.34" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (2 samples, 0.05%)</title><rect x="49.8" y="181" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="52.85" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (7 samples, 0.16%)</title><rect x="12.9" y="149" width="1.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="15.92" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (3 samples, 0.07%)</title><rect x="17.4" y="229" width="0.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="20.44" y="239.5" ></text>
</g>
<g >
<title>runtime.scanstack (2 samples, 0.05%)</title><rect x="28.1" y="165" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="31.06" y="175.5" ></text>
</g>
<g >
<title>runtime.gcStart.func3 (2 samples, 0.05%)</title><rect x="293.4" y="165" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="296.44" y="175.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (7 samples, 0.16%)</title><rect x="1188.1" y="245" width="1.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1191.14" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (24 samples, 0.54%)</title><rect x="256.8" y="117" width="6.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="259.79" y="127.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.05%)</title><rect x="293.4" y="133" width="0.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="296.44" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (11 samples, 0.25%)</title><rect x="270.9" y="197" width="2.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="273.86" y="207.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.02%)</title><rect x="1187.6" y="197" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1190.61" y="207.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (2 samples, 0.05%)</title><rect x="293.4" y="149" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="296.44" y="159.5" ></text>
</g>
<g >
<title>runtime.findObject (8 samples, 0.18%)</title><rect x="1032.7" y="133" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1035.74" y="143.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (2 samples, 0.05%)</title><rect x="28.1" y="181" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="31.06" y="191.5" ></text>
</g>
<g >
<title>runtime.newAllocBits (3 samples, 0.07%)</title><rect x="261.6" y="69" width="0.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="264.57" y="79.5" ></text>
</g>
<g >
<title>main.ParseTemp (278 samples, 6.26%)</title><rect x="1110.6" y="229" width="73.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1113.57" y="239.5" >main.Par..</text>
</g>
<g >
<title>runtime.futexsleep (3 samples, 0.07%)</title><rect x="24.6" y="149" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="27.61" y="159.5" ></text>
</g>
<g >
<title>syscall.Read (242 samples, 5.45%)</title><rect x="1036.7" y="197" width="64.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1039.72" y="207.5" >syscall..</text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="1187.9" y="181" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1190.87" y="191.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.02%)</title><rect x="293.2" y="133" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="296.18" y="143.5" ></text>
</g>
<g >
<title>runtime.newArenaMayUnlock (1 samples, 0.02%)</title><rect x="261.0" y="37" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="264.04" y="47.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.02%)</title><rect x="1188.4" y="165" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1191.41" y="175.5" ></text>
</g>
<g >
<title>runtime.schedule (6 samples, 0.14%)</title><rect x="1188.1" y="213" width="1.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1191.14" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (2 samples, 0.05%)</title><rect x="23.5" y="229" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="26.55" y="239.5" ></text>
</g>
<g >
<title>os.(*File).read (245 samples, 5.52%)</title><rect x="1035.9" y="213" width="65.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1038.93" y="223.5" >os.(*Fi..</text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.14%)</title><rect x="24.1" y="229" width="1.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="27.08" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (24 samples, 0.54%)</title><rect x="256.8" y="133" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="259.79" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).fullUnswept (1 samples, 0.02%)</title><rect x="11.1" y="229" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="14.06" y="239.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="1187.9" y="213" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1190.87" y="223.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.02%)</title><rect x="21.2" y="197" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="24.16" y="207.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (276 samples, 6.21%)</title><rect x="336.7" y="213" width="73.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="339.74" y="223.5" >runtime...</text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (1 samples, 0.02%)</title><rect x="27.8" y="197" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="30.80" y="207.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.02%)</title><rect x="50.4" y="181" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="53.38" y="191.5" ></text>
</g>
<g >
<title>runtime.tgkill (2 samples, 0.05%)</title><rect x="27.3" y="133" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="30.27" y="143.5" ></text>
</g>
<g >
<title>runtime.mallocgc (602 samples, 13.55%)</title><rect x="141.0" y="213" width="159.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="143.96" y="223.5" >runtime.mallocgc</text>
</g>
<g >
<title>runtime/internal/syscall.EpollWait (2 samples, 0.05%)</title><rect x="293.4" y="117" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="296.44" y="127.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.02%)</title><rect x="1185.0" y="149" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1187.95" y="159.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Bool).Load (1 samples, 0.02%)</title><rect x="1038.6" y="133" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1041.58" y="143.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (23 samples, 0.52%)</title><rect x="11.3" y="197" width="6.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="14.33" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (2 samples, 0.05%)</title><rect x="257.6" y="69" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="260.58" y="79.5" ></text>
</g>
<g >
<title>runtime.markroot (4 samples, 0.09%)</title><rect x="290.0" y="101" width="1.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="292.99" y="111.5" ></text>
</g>
<g >
<title>runtime.futex (6 samples, 0.14%)</title><rect x="1185.2" y="149" width="1.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1188.22" y="159.5" ></text>
</g>
<g >
<title>runtime.gcstopm (1 samples, 0.02%)</title><rect x="1185.0" y="197" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1187.95" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerIdle (6 samples, 0.14%)</title><rect x="67.4" y="229" width="1.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="70.38" y="239.5" ></text>
</g>
<g >
<title>runtime.(*consistentHeapStats).release (1 samples, 0.02%)</title><rect x="12.4" y="165" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="15.39" y="175.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="1185.0" y="133" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1187.95" y="143.5" ></text>
</g>
<g >
<title>runtime.pidleput (1 samples, 0.02%)</title><rect x="25.7" y="149" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="28.67" y="159.5" ></text>
</g>
<g >
<title>runtime.packPallocSum (1 samples, 0.02%)</title><rect x="14.5" y="133" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="17.52" y="143.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="1188.1" y="117" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.14" y="127.5" ></text>
</g>
<g >
<title>runtime.forEachG (1 samples, 0.02%)</title><rect x="292.9" y="149" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="295.91" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (18 samples, 0.41%)</title><rect x="1030.9" y="181" width="4.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1033.88" y="191.5" ></text>
</g>
<g >
<title>gcWriteBarrier (21 samples, 0.47%)</title><rect x="1030.1" y="213" width="5.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1033.08" y="223.5" ></text>
</g>
<g >
<title>runtime.runqsteal (1 samples, 0.02%)</title><rect x="1187.3" y="181" width="0.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1190.34" y="191.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).Text (1,311 samples, 29.51%)</title><rect x="69.0" y="245" width="348.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="71.97" y="255.5" >bufio.(*Scanner).Text</text>
</g>
<g >
<title>runtime.typePointers.nextFast (2 samples, 0.05%)</title><rect x="68.4" y="197" width="0.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="71.44" y="207.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.02%)</title><rect x="28.3" y="133" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="31.33" y="143.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.02%)</title><rect x="1185.0" y="181" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1187.95" y="191.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.02%)</title><rect x="1185.0" y="165" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1187.95" y="175.5" ></text>
</g>
<g >
<title>indexbytebody (142 samples, 3.20%)</title><rect x="976.4" y="197" width="37.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="979.42" y="207.5" >ind..</text>
</g>
<g >
<title>runtime.futex (2 samples, 0.05%)</title><rect x="1188.7" y="133" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.67" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).setSpans (1 samples, 0.02%)</title><rect x="259.7" y="53" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="262.71" y="63.5" ></text>
</g>
<g >
<title>runtime.sweepone (52 samples, 1.17%)</title><rect x="10.3" y="245" width="13.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.27" y="255.5" ></text>
</g>
<g >
<title>runtime.schedule (14 samples, 0.32%)</title><rect x="1184.4" y="229" width="3.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1187.42" y="239.5" ></text>
</g>
<g >
<title>runtime.scanblock (4 samples, 0.09%)</title><rect x="290.0" y="69" width="1.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="292.99" y="79.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Bool).Load (1 samples, 0.02%)</title><rect x="1189.5" y="197" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1192.47" y="207.5" ></text>
</g>
<g >
<title>os.(*File).Read (1 samples, 0.02%)</title><rect x="1035.7" y="213" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1038.66" y="223.5" ></text>
</g>
<g >
<title>runtime.signalM (2 samples, 0.05%)</title><rect x="27.3" y="149" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="30.27" y="159.5" ></text>
</g>
<g >
<title>runtime.markroot (6 samples, 0.14%)</title><rect x="28.1" y="197" width="1.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="31.06" y="207.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Load (1 samples, 0.02%)</title><rect x="1189.2" y="181" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1192.20" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (12 samples, 0.27%)</title><rect x="267.7" y="181" width="3.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="270.68" y="191.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (1 samples, 0.02%)</title><rect x="292.4" y="85" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="295.38" y="95.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (4 samples, 0.09%)</title><rect x="290.0" y="85" width="1.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="292.99" y="95.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (154 samples, 3.47%)</title><rect x="26.5" y="229" width="40.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="29.47" y="239.5" >run..</text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (1 samples, 0.02%)</title><rect x="1031.4" y="149" width="0.3" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1034.41" y="159.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (1 samples, 0.02%)</title><rect x="28.1" y="149" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="31.06" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (20 samples, 0.45%)</title><rect x="11.3" y="181" width="5.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="14.33" y="191.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.02%)</title><rect x="1189.7" y="197" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1192.73" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).memoryLimitHeapGoal (1 samples, 0.02%)</title><rect x="294.5" y="149" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="297.51" y="159.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="1188.4" y="133" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.41" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (23 samples, 0.52%)</title><rect x="11.3" y="213" width="6.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="14.33" y="223.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.forEachP.func5 (6 samples, 0.14%)</title><rect x="24.1" y="213" width="1.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="27.08" y="223.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (1 samples, 0.02%)</title><rect x="261.0" y="53" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="264.04" y="63.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.02%)</title><rect x="26.2" y="245" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="29.20" y="255.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.05%)</title><rect x="24.9" y="133" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="27.88" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (10 samples, 0.23%)</title><rect x="264.0" y="165" width="2.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="266.96" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (66 samples, 1.49%)</title><rect x="253.3" y="197" width="17.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="256.33" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (2 samples, 0.05%)</title><rect x="261.6" y="53" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="264.57" y="63.5" ></text>
</g>
<g >
<title>runtime.(*scavengeIndex).free (1 samples, 0.02%)</title><rect x="14.8" y="149" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="17.78" y="159.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (1 samples, 0.02%)</title><rect x="293.2" y="149" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="296.18" y="159.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.02%)</title><rect x="1188.4" y="181" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1191.41" y="191.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (4 samples, 0.09%)</title><rect x="28.6" y="181" width="1.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="31.60" y="191.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (10 samples, 0.23%)</title><rect x="290.0" y="117" width="2.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="292.99" y="127.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.02%)</title><rect x="1039.6" y="133" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1042.64" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).trigger (4 samples, 0.09%)</title><rect x="294.0" y="181" width="1.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="296.98" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (3 samples, 0.07%)</title><rect x="258.9" y="53" width="0.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="261.91" y="63.5" ></text>
</g>
<g >
<title>runtime.gcDrain (154 samples, 3.47%)</title><rect x="26.5" y="213" width="40.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="29.47" y="223.5" >run..</text>
</g>
<g >
<title>runtime.casgstatus (3 samples, 0.07%)</title><rect x="1037.3" y="117" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1040.25" y="127.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (3 samples, 0.07%)</title><rect x="266.6" y="165" width="0.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="269.61" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.02%)</title><rect x="20.9" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.89" y="223.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (2 samples, 0.05%)</title><rect x="15.8" y="165" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="18.84" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (27 samples, 0.61%)</title><rect x="256.5" y="165" width="7.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="259.52" y="175.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (20 samples, 0.45%)</title><rect x="295.6" y="197" width="5.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="298.57" y="207.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (10 samples, 0.23%)</title><rect x="264.0" y="149" width="2.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="266.96" y="159.5" ></text>
</g>
<g >
<title>runtime.notetsleep (4 samples, 0.09%)</title><rect x="24.3" y="181" width="1.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="27.34" y="191.5" ></text>
</g>
<g >
<title>runtime.gcmarknewobject (2 samples, 0.05%)</title><rect x="295.0" y="197" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="298.04" y="207.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (3 samples, 0.07%)</title><rect x="262.4" y="69" width="0.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="265.36" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (12 samples, 0.27%)</title><rect x="258.1" y="69" width="3.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="261.11" y="79.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (2 samples, 0.05%)</title><rect x="20.4" y="213" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="23.36" y="223.5" ></text>
</g>
<g >
<title>runtime.procresize (1 samples, 0.02%)</title><rect x="25.7" y="165" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="28.67" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (24 samples, 0.54%)</title><rect x="256.8" y="101" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="259.79" y="111.5" ></text>
</g>
<g >
<title>main.main (1,644 samples, 37.01%)</title><rect x="747.7" y="245" width="436.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="750.70" y="255.5" >main.main</text>
</g>
<g >
<title>runtime.gcAssistAlloc (10 samples, 0.23%)</title><rect x="290.0" y="181" width="2.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="292.99" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (2 samples, 0.05%)</title><rect x="1032.2" y="133" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1035.21" y="143.5" ></text>
</g>
<g >
<title>runtime.(*limiterEvent).stop (1 samples, 0.02%)</title><rect x="293.2" y="117" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="296.18" y="127.5" ></text>
</g>
<g >
<title>runtime.park_m (14 samples, 0.32%)</title><rect x="1184.4" y="245" width="3.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1187.42" y="255.5" ></text>
</g>
<g >
<title>bufio.ScanLines (110 samples, 2.48%)</title><rect x="931.3" y="213" width="29.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="934.26" y="223.5" >bu..</text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.02%)</title><rect x="21.2" y="213" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="24.16" y="223.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="25.4" y="181" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="28.41" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (1 samples, 0.02%)</title><rect x="16.4" y="165" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="19.38" y="175.5" ></text>
</g>
<g >
<title>runtime.scanobject (6 samples, 0.14%)</title><rect x="291.1" y="101" width="1.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="294.05" y="111.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (2 samples, 0.05%)</title><rect x="1039.6" y="149" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1042.64" y="159.5" ></text>
</g>
<g >
<title>runtime.entersyscall (11 samples, 0.25%)</title><rect x="1036.7" y="149" width="2.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1039.72" y="159.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (1 samples, 0.02%)</title><rect x="28.3" y="149" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="31.33" y="159.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (1 samples, 0.02%)</title><rect x="25.7" y="197" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="28.67" y="207.5" ></text>
</g>
<g >
<title>runtime.memmove (135 samples, 3.04%)</title><rect x="300.9" y="213" width="35.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="303.88" y="223.5" >run..</text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (5 samples, 0.11%)</title><rect x="269.5" y="165" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="272.54" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="1189.7" y="213" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1192.73" y="223.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.02%)</title><rect x="1188.1" y="133" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1191.14" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (4 samples, 0.09%)</title><rect x="260.0" y="53" width="1.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="262.97" y="63.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (11 samples, 0.25%)</title><rect x="12.7" y="165" width="2.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="15.66" y="175.5" ></text>
</g>
<g >
<title>runtime.offAddr.lessThan (2 samples, 0.05%)</title><rect x="15.0" y="149" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="18.05" y="159.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (6 samples, 0.14%)</title><rect x="1036.7" y="133" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1039.72" y="143.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.02%)</title><rect x="50.6" y="181" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="53.64" y="191.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="25.4" y="197" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="28.41" y="207.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).advance (36 samples, 0.81%)</title><rect x="1101.0" y="229" width="9.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1104.01" y="239.5" ></text>
</g>
<g >
<title>runtime.stealWork (3 samples, 0.07%)</title><rect x="1186.8" y="197" width="0.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1189.81" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (10 samples, 0.23%)</title><rect x="290.0" y="165" width="2.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="292.99" y="175.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (5 samples, 0.11%)</title><rect x="24.1" y="197" width="1.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="27.08" y="207.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.02%)</title><rect x="25.9" y="149" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="28.94" y="159.5" ></text>
</g>
<g >
<title>runtime.divRoundUp (4 samples, 0.09%)</title><rect x="128.2" y="213" width="1.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="131.21" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (1 samples, 0.02%)</title><rect x="28.3" y="117" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="31.33" y="127.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (1 samples, 0.02%)</title><rect x="25.9" y="197" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="28.94" y="207.5" ></text>
</g>
<g >
<title>runtime.gcStart.func1 (1 samples, 0.02%)</title><rect x="293.2" y="165" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="296.18" y="175.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readUnlock (2 samples, 0.05%)</title><rect x="1036.2" y="181" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1039.19" y="191.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (2 samples, 0.05%)</title><rect x="1188.7" y="181" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1191.67" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptM (2 samples, 0.05%)</title><rect x="27.3" y="165" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="30.27" y="175.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (2 samples, 0.05%)</title><rect x="17.7" y="213" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="20.70" y="223.5" ></text>
</g>
<g >
<title>runtime.scanobject (129 samples, 2.90%)</title><rect x="29.7" y="197" width="34.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="32.66" y="207.5" >ru..</text>
</g>
<g >
<title>runtime.(*pageBits).clear (1 samples, 0.02%)</title><rect x="15.6" y="165" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="18.58" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.09%)</title><rect x="292.9" y="181" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="295.91" y="191.5" ></text>
</g>
<g >
<title>runtime.forEachP (6 samples, 0.14%)</title><rect x="24.1" y="245" width="1.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="27.08" y="255.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocker).tryAcquire (1 samples, 0.02%)</title><rect x="23.3" y="229" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="26.28" y="239.5" ></text>
</g>
<g >
<title>runtime.gcResetMarkState (1 samples, 0.02%)</title><rect x="292.9" y="165" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="295.91" y="175.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.02%)</title><rect x="290.8" y="53" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="293.79" y="63.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (18 samples, 0.41%)</title><rect x="1030.9" y="197" width="4.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1033.88" y="207.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (4 samples, 0.09%)</title><rect x="294.0" y="197" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="296.98" y="207.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.02%)</title><rect x="25.9" y="165" width="0.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="28.94" y="175.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (1 samples, 0.02%)</title><rect x="25.7" y="229" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="28.67" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (15 samples, 0.34%)</title><rect x="1031.7" y="149" width="4.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1034.67" y="159.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (38 samples, 0.86%)</title><rect x="50.9" y="181" width="10.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="53.91" y="191.5" ></text>
</g>
<g >
<title>runtime.runqgrab (1 samples, 0.02%)</title><rect x="1187.3" y="165" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1190.34" y="175.5" ></text>
</g>
<g >
<title>runtime.gcstopm (1 samples, 0.02%)</title><rect x="1188.1" y="181" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1191.14" y="191.5" ></text>
</g>
<g >
<title>syscall.Syscall (242 samples, 5.45%)</title><rect x="1036.7" y="165" width="64.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1039.72" y="175.5" >syscall..</text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="25.9" y="133" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="28.94" y="143.5" ></text>
</g>
<g >
<title>runtime.trygetfull (1 samples, 0.02%)</title><rect x="27.8" y="165" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="30.80" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.02%)</title><rect x="261.3" y="69" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="264.30" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (24 samples, 0.54%)</title><rect x="256.8" y="85" width="6.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="259.79" y="95.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (229 samples, 5.16%)</title><rect x="1040.2" y="133" width="60.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1043.18" y="143.5" >runtim..</text>
</g>
<g >
<title>runtime.(*gcBits).bitp (2 samples, 0.05%)</title><rect x="1030.9" y="149" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1033.88" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).partialSwept (1 samples, 0.02%)</title><rect x="263.7" y="165" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="266.69" y="175.5" ></text>
</g>
<g >
<title>all (4,442 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>runtime.futexsleep (6 samples, 0.14%)</title><rect x="1185.2" y="165" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1188.22" y="175.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (4 samples, 0.09%)</title><rect x="13.2" y="133" width="1.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="16.19" y="143.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Load (1 samples, 0.02%)</title><rect x="294.8" y="149" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="297.77" y="159.5" ></text>
</g>
<g >
<title>runtime.getMCache (41 samples, 0.92%)</title><rect x="129.3" y="213" width="10.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="132.28" y="223.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.02%)</title><rect x="25.9" y="181" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="28.94" y="191.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (2 samples, 0.05%)</title><rect x="67.6" y="181" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="70.65" y="191.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (1 samples, 0.02%)</title><rect x="68.2" y="181" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="71.18" y="191.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (1 samples, 0.02%)</title><rect x="25.7" y="181" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="28.67" y="191.5" ></text>
</g>
<g >
<title>runtime.alignUp (12 samples, 0.27%)</title><rect x="125.0" y="213" width="3.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="128.02" y="223.5" ></text>
</g>
<g >
<title>runtime.gcStart (5 samples, 0.11%)</title><rect x="292.6" y="197" width="1.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="295.65" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func2 (1 samples, 0.02%)</title><rect x="25.9" y="213" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="28.94" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (24 samples, 0.54%)</title><rect x="256.8" y="149" width="6.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="259.79" y="159.5" ></text>
</g>
<g >
<title>runtime.makeSpanClass (3 samples, 0.07%)</title><rect x="140.2" y="213" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="143.17" y="223.5" ></text>
</g>
<g >
<title>runtime.findRunnable (5 samples, 0.11%)</title><rect x="1188.1" y="197" width="1.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1191.14" y="207.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (11 samples, 0.25%)</title><rect x="61.0" y="181" width="2.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="64.00" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="16.9" y="165" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="19.91" y="175.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.02%)</title><rect x="28.1" y="133" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="31.06" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="25.9" y="229" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="28.94" y="239.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.02%)</title><rect x="1188.1" y="149" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1191.14" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).heapGoalInternal (3 samples, 0.07%)</title><rect x="294.2" y="165" width="0.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="297.24" y="175.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (13 samples, 0.29%)</title><rect x="63.9" y="197" width="3.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="66.93" y="207.5" ></text>
</g>
<g >
<title>runtime.mergeSummaries (1 samples, 0.02%)</title><rect x="14.3" y="133" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="17.25" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (2 samples, 0.05%)</title><rect x="27.3" y="181" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="30.27" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (2 samples, 0.05%)</title><rect x="27.3" y="197" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="30.27" y="207.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1192.73" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (23 samples, 0.52%)</title><rect x="11.3" y="229" width="6.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="14.33" y="239.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1,297 samples, 29.20%)</title><rect x="72.7" y="229" width="344.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="75.69" y="239.5" >runtime.slicebytetostring</text>
</g>
<g >
<title>runtime.acquirem (60 samples, 1.35%)</title><rect x="109.1" y="213" width="15.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="112.09" y="223.5" ></text>
</g>
<g >
<title>runtime.scanblock (4 samples, 0.09%)</title><rect x="28.6" y="165" width="1.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="31.60" y="175.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (7 samples, 0.16%)</title><rect x="21.4" y="213" width="1.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="24.42" y="223.5" ></text>
</g>
<g >
<title>main.(*HashMap).Get (302 samples, 6.80%)</title><rect x="417.2" y="245" width="80.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="420.24" y="255.5" >main.(*Ha..</text>
</g>
<g >
<title>runtime.deductAssistCredit (71 samples, 1.60%)</title><rect x="273.8" y="197" width="18.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="276.79" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrain (6 samples, 0.14%)</title><rect x="67.4" y="213" width="1.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="70.38" y="223.5" ></text>
</g>
<g >
<title>runtime.decoderune (31 samples, 0.70%)</title><rect x="739.5" y="229" width="8.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="742.46" y="239.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.02%)</title><rect x="16.6" y="181" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="19.64" y="191.5" ></text>
</g>
<g >
<title>runtime.releasem (27 samples, 0.61%)</title><rect x="410.1" y="213" width="7.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="413.06" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Add (1 samples, 0.02%)</title><rect x="267.4" y="165" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="270.41" y="175.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint8).Load (3 samples, 0.07%)</title><rect x="1038.8" y="133" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1041.85" y="143.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).Scan (872 samples, 19.63%)</title><rect x="869.4" y="229" width="231.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="872.37" y="239.5" >bufio.(*Scanner).Scan</text>
</g>
<g >
<title>runtime.systemstack (160 samples, 3.60%)</title><rect x="26.5" y="245" width="42.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="29.47" y="255.5" >runt..</text>
</g>
<g >
<title>runtime.(*gcControllerState).revise (1 samples, 0.02%)</title><rect x="256.3" y="149" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="259.25" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (2 samples, 0.05%)</title><rect x="49.3" y="181" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="52.32" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (10 samples, 0.23%)</title><rect x="290.0" y="149" width="2.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="292.99" y="159.5" ></text>
</g>
<g >
<title>runtime.mPark (6 samples, 0.14%)</title><rect x="1185.2" y="197" width="1.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1188.22" y="207.5" ></text>
</g>
<g >
<title>bytes.IndexByte (213 samples, 4.80%)</title><rect x="973.5" y="213" width="56.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="976.50" y="223.5" >bytes..</text>
</g>
<g >
<title>runtime.gcMarkDone (2 samples, 0.05%)</title><rect x="25.7" y="245" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="28.67" y="255.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (60 samples, 1.35%)</title><rect x="1014.1" y="197" width="16.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1017.14" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (18 samples, 0.41%)</title><rect x="1030.9" y="165" width="4.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1033.88" y="175.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.02%)</title><rect x="1188.1" y="165" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1191.14" y="175.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (4 samples, 0.09%)</title><rect x="24.3" y="165" width="1.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="27.34" y="175.5" ></text>
</g>
<g >
<title>runtime.spanOf (3 samples, 0.07%)</title><rect x="1034.9" y="133" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1037.86" y="143.5" ></text>
</g>
<g >
<title>runtime.newArenaMayUnlock (1 samples, 0.02%)</title><rect x="262.1" y="37" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="265.10" y="47.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (46 samples, 1.04%)</title><rect x="255.5" y="181" width="12.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="258.46" y="191.5" ></text>
</g>
<g >
<title>runtime.traceAcquire (1 samples, 0.02%)</title><rect x="1038.3" y="133" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1041.32" y="143.5" ></text>
</g>
<g >
<title>syscall.read (242 samples, 5.45%)</title><rect x="1036.7" y="181" width="64.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1039.72" y="191.5" >syscall..</text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="25.7" y="117" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="28.67" y="127.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (2 samples, 0.05%)</title><rect x="1036.2" y="165" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1039.19" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.02%)</title><rect x="1031.9" y="133" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1034.94" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="25.7" y="213" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="28.67" y="223.5" ></text>
</g>
<g >
<title>runtime.main (4,199 samples, 94.53%)</title><rect x="69.0" y="261" width="1115.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="71.97" y="271.5" >runtime.main</text>
</g>
<g >
<title>runtime.headTailIndex.head (1 samples, 0.02%)</title><rect x="263.4" y="149" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="266.43" y="159.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.02%)</title><rect x="17.2" y="165" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="20.17" y="175.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="16.9" y="181" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="19.91" y="191.5" ></text>
</g>
<g >
<title>runtime.morestack (7 samples, 0.16%)</title><rect x="1188.1" y="261" width="1.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1191.14" y="271.5" ></text>
</g>
<g >
<title>runtime.findRunnable (12 samples, 0.27%)</title><rect x="1184.7" y="213" width="3.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1187.69" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (3 samples, 0.07%)</title><rect x="1035.9" y="197" width="0.8" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1038.93" y="207.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.05%)</title><rect x="1188.7" y="149" width="0.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1191.67" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).init (1 samples, 0.02%)</title><rect x="27.8" y="181" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="30.80" y="191.5" ></text>
</g>
<g >
<title>runtime.save (1 samples, 0.02%)</title><rect x="1038.1" y="117" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1041.05" y="127.5" ></text>
</g>
<g >
<title>main.Hash (744 samples, 16.75%)</title><rect x="550.1" y="245" width="197.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="553.06" y="255.5" >main.Hash</text>
</g>
</g>
</svg>
