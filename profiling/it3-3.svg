<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>runtime.systemstack (26 samples, 0.42%)</title><rect x="191.6" y="165" width="5.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="194.58" y="175.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (251 samples, 4.10%)</title><rect x="577.3" y="149" width="48.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="580.28" y="159.5" >sysc..</text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.03%)</title><rect x="1189.6" y="197" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1192.61" y="207.5" ></text>
</g>
<g >
<title>syscall.read (274 samples, 4.47%)</title><rect x="572.8" y="181" width="52.8" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="575.85" y="191.5" >sysca..</text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="1185.6" y="181" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1188.57" y="191.5" ></text>
</g>
<g >
<title>main.main (4,412 samples, 72.00%)</title><rect x="335.6" y="245" width="849.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="338.62" y="255.5" >main.main</text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (251 samples, 4.10%)</title><rect x="577.3" y="133" width="48.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="580.28" y="143.5" >runt..</text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.02%)</title><rect x="17.7" y="165" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="20.70" y="175.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (1 samples, 0.02%)</title><rect x="31.6" y="181" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="34.57" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (6 samples, 0.10%)</title><rect x="178.1" y="165" width="1.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="181.10" y="175.5" ></text>
</g>
<g >
<title>runtime.futex (7 samples, 0.11%)</title><rect x="1185.8" y="149" width="1.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1188.76" y="159.5" ></text>
</g>
<g >
<title>runtime.scanblock (25 samples, 0.41%)</title><rect x="191.8" y="69" width="4.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="194.78" y="79.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (1 samples, 0.02%)</title><rect x="1185.2" y="197" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1188.19" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (26 samples, 0.42%)</title><rect x="191.6" y="181" width="5.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="194.58" y="191.5" ></text>
</g>
<g >
<title>runtime.findRunnable (11 samples, 0.18%)</title><rect x="1185.4" y="213" width="2.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1188.38" y="223.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.02%)</title><rect x="19.2" y="133" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="22.24" y="143.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.02%)</title><rect x="1189.4" y="181" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1192.42" y="191.5" ></text>
</g>
<g >
<title>runtime.cheaprand (1 samples, 0.02%)</title><rect x="191.6" y="85" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="194.58" y="95.5" ></text>
</g>
<g >
<title>syscall.Read (274 samples, 4.47%)</title><rect x="572.8" y="197" width="52.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="575.85" y="207.5" >sysca..</text>
</g>
<g >
<title>runtime.findObject (5 samples, 0.08%)</title><rect x="570.2" y="133" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="573.15" y="143.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.02%)</title><rect x="1189.4" y="197" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1192.42" y="207.5" ></text>
</g>
<g >
<title>indexbytebody (167 samples, 2.73%)</title><rect x="526.2" y="197" width="32.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="529.25" y="207.5" >in..</text>
</g>
<g >
<title>internal/poll.(*FD).readUnlock (2 samples, 0.03%)</title><rect x="571.9" y="181" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="574.89" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.08%)</title><rect x="196.6" y="181" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="199.59" y="191.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).run (1 samples, 0.02%)</title><rect x="10.2" y="245" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="13.19" y="255.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.02%)</title><rect x="1189.4" y="133" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1192.42" y="143.5" ></text>
</g>
<g >
<title>bufio.dropCR (51 samples, 0.83%)</title><rect x="513.2" y="213" width="9.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="516.16" y="223.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (1 samples, 0.02%)</title><rect x="10.2" y="149" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="13.19" y="159.5" ></text>
</g>
<g >
<title>runtime.casgstatus (3 samples, 0.05%)</title><rect x="573.2" y="117" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="576.23" y="127.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.forEachP.func6 (2 samples, 0.03%)</title><rect x="17.1" y="197" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="20.12" y="207.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="1185.6" y="165" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1188.57" y="175.5" ></text>
</g>
<g >
<title>runtime.notetsleep (2 samples, 0.03%)</title><rect x="17.9" y="181" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="20.89" y="191.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.02%)</title><rect x="18.7" y="117" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="21.67" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bytep (1 samples, 0.02%)</title><rect x="169.4" y="197" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="172.44" y="207.5" ></text>
</g>
<g >
<title>runtime.main (5,979 samples, 97.57%)</title><rect x="33.9" y="261" width="1151.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="36.88" y="271.5" >runtime.main</text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (1 samples, 0.02%)</title><rect x="11.0" y="133" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="13.96" y="143.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).Text (1,400 samples, 22.85%)</title><rect x="33.9" y="245" width="269.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="36.88" y="255.5" >bufio.(*Scanner).Text</text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (3 samples, 0.05%)</title><rect x="572.3" y="181" width="0.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="575.27" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (610 samples, 9.95%)</title><rect x="85.1" y="213" width="117.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="88.10" y="223.5" >runtime.mallocgc</text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.02%)</title><rect x="1187.9" y="149" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.88" y="159.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (2 samples, 0.03%)</title><rect x="16.5" y="197" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="19.55" y="207.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (11 samples, 0.18%)</title><rect x="1187.5" y="229" width="2.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1190.50" y="239.5" ></text>
</g>
<g >
<title>runtime.gcstopm (2 samples, 0.03%)</title><rect x="1187.7" y="181" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1190.69" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pageCache).alloc (2 samples, 0.03%)</title><rect x="176.9" y="69" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="179.95" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (2 samples, 0.03%)</title><rect x="173.5" y="69" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="176.48" y="79.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (2 samples, 0.03%)</title><rect x="173.5" y="53" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="176.48" y="63.5" ></text>
</g>
<g >
<title>syscall.Syscall (274 samples, 4.47%)</title><rect x="572.8" y="165" width="52.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="575.85" y="175.5" >sysca..</text>
</g>
<g >
<title>runtime.notesleep (7 samples, 0.11%)</title><rect x="1185.8" y="181" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1188.76" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint8).Load (3 samples, 0.05%)</title><rect x="574.0" y="133" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="577.00" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (28 samples, 0.46%)</title><rect x="172.1" y="149" width="5.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="175.13" y="159.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (2 samples, 0.03%)</title><rect x="19.1" y="149" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="22.05" y="159.5" ></text>
</g>
<g >
<title>runtime.madvise (1 samples, 0.02%)</title><rect x="10.2" y="133" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="13.19" y="143.5" ></text>
</g>
<g >
<title>runtime.signalM (1 samples, 0.02%)</title><rect x="18.9" y="149" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="21.86" y="159.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (9 samples, 0.15%)</title><rect x="32.0" y="197" width="1.7" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="34.95" y="207.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.03%)</title><rect x="12.5" y="181" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="15.50" y="191.5" ></text>
</g>
<g >
<title>runtime.futexsleep (7 samples, 0.11%)</title><rect x="1185.8" y="165" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1188.76" y="175.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (90 samples, 1.47%)</title><rect x="16.5" y="261" width="17.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="19.55" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (1 samples, 0.02%)</title><rect x="570.0" y="133" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="572.96" y="143.5" ></text>
</g>
<g >
<title>all (6,128 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.02%)</title><rect x="18.7" y="133" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="21.67" y="143.5" ></text>
</g>
<g >
<title>memeqbody (345 samples, 5.63%)</title><rect x="1095.5" y="213" width="66.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1098.45" y="223.5" >memeqbody</text>
</g>
<g >
<title>runtime.(*pageAlloc).update (1 samples, 0.02%)</title><rect x="11.0" y="149" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.96" y="159.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (1 samples, 0.02%)</title><rect x="13.7" y="213" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="16.66" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Add (1 samples, 0.02%)</title><rect x="180.2" y="165" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="183.22" y="175.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int64).Add (1 samples, 0.02%)</title><rect x="33.7" y="245" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="36.68" y="255.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="17.7" y="101" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="20.70" y="111.5" ></text>
</g>
<g >
<title>runtime.memequal (94 samples, 1.53%)</title><rect x="1161.9" y="213" width="18.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1164.89" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (26 samples, 0.42%)</title><rect x="191.6" y="117" width="5.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="194.58" y="127.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (2 samples, 0.03%)</title><rect x="19.4" y="149" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="22.44" y="159.5" ></text>
</g>
<g >
<title>runtime.sweepone (1 samples, 0.02%)</title><rect x="177.7" y="133" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="180.72" y="143.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (20 samples, 0.33%)</title><rect x="27.7" y="181" width="3.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="30.72" y="191.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (345 samples, 5.63%)</title><rect x="229.3" y="213" width="66.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="232.32" y="223.5" >runtime..</text>
</g>
<g >
<title>runtime.markrootBlock (4 samples, 0.07%)</title><rect x="20.2" y="181" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="23.21" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="17.3" y="117" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="20.32" y="127.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.07%)</title><rect x="1188.3" y="133" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.27" y="143.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (2 samples, 0.03%)</title><rect x="176.6" y="53" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="179.56" y="63.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="10.2" y="197" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="13.19" y="207.5" ></text>
</g>
<g >
<title>runtime.scanstack (6 samples, 0.10%)</title><rect x="19.1" y="165" width="1.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="22.05" y="175.5" ></text>
</g>
<g >
<title>runtime.tgkill (1 samples, 0.02%)</title><rect x="18.5" y="133" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="21.47" y="143.5" ></text>
</g>
<g >
<title>runtime.entersyscall (7 samples, 0.11%)</title><rect x="573.2" y="149" width="1.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="576.23" y="159.5" ></text>
</g>
<g >
<title>runtime.sysUnused (1 samples, 0.02%)</title><rect x="10.2" y="165" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="13.19" y="175.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.02%)</title><rect x="196.4" y="53" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="199.40" y="63.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (1 samples, 0.02%)</title><rect x="18.5" y="181" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="21.47" y="191.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (2 samples, 0.03%)</title><rect x="19.8" y="149" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="22.82" y="159.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (26 samples, 0.42%)</title><rect x="191.6" y="149" width="5.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="194.58" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (28 samples, 0.46%)</title><rect x="172.1" y="133" width="5.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="175.13" y="143.5" ></text>
</g>
<g >
<title>runtime.findRunnable (9 samples, 0.15%)</title><rect x="1187.5" y="197" width="1.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1190.50" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (80 samples, 1.31%)</title><rect x="18.3" y="245" width="15.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="21.28" y="255.5" ></text>
</g>
<g >
<title>runtime.(*gcCPULimiterState).needUpdate (1 samples, 0.02%)</title><rect x="1187.5" y="181" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1190.50" y="191.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1,362 samples, 22.23%)</title><rect x="41.2" y="229" width="262.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="44.19" y="239.5" >runtime.slicebytetostring</text>
</g>
<g >
<title>runtime/internal/syscall.EpollWait (1 samples, 0.02%)</title><rect x="1187.1" y="181" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1190.11" y="191.5" ></text>
</g>
<g >
<title>runtime.scanblock (2 samples, 0.03%)</title><rect x="19.4" y="133" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="22.44" y="143.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.forEachP.func5 (3 samples, 0.05%)</title><rect x="16.5" y="213" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="19.55" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="17.3" y="133" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="20.32" y="143.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (1 samples, 0.02%)</title><rect x="10.2" y="181" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="13.19" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.11%)</title><rect x="569.8" y="181" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="572.77" y="191.5" ></text>
</g>
<g >
<title>bytes.IndexByte (243 samples, 3.97%)</title><rect x="523.0" y="213" width="46.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="525.98" y="223.5" >byte..</text>
</g>
<g >
<title>runtime.tophash (4 samples, 0.07%)</title><rect x="1184.4" y="229" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1187.42" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (28 samples, 0.46%)</title><rect x="172.1" y="117" width="5.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="175.13" y="127.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (2 samples, 0.03%)</title><rect x="571.9" y="165" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="574.89" y="175.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).pop (1 samples, 0.02%)</title><rect x="13.1" y="213" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="16.08" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="1189.4" y="149" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1192.42" y="159.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (2 samples, 0.03%)</title><rect x="17.1" y="165" width="0.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="20.12" y="175.5" ></text>
</g>
<g >
<title>runtime.markBits.setMarked (1 samples, 0.02%)</title><rect x="27.5" y="181" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="30.52" y="191.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="17.7" y="133" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="20.70" y="143.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.03%)</title><rect x="196.0" y="53" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="199.01" y="63.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="1187.9" y="117" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.88" y="127.5" ></text>
</g>
<g >
<title>runtime.finishsweep_m (4 samples, 0.07%)</title><rect x="196.8" y="149" width="0.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="199.78" y="159.5" ></text>
</g>
<g >
<title>bufio.ScanLines (122 samples, 1.99%)</title><rect x="489.7" y="213" width="23.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="492.66" y="223.5" >b..</text>
</g>
<g >
<title>runtime.offAddr.lessThan (2 samples, 0.03%)</title><rect x="11.7" y="149" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="14.73" y="159.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).CompareAndSwap (3 samples, 0.05%)</title><rect x="13.9" y="213" width="0.5" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="16.85" y="223.5" ></text>
</g>
<g >
<title>runtime.forEachP (3 samples, 0.05%)</title><rect x="16.5" y="245" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="19.55" y="255.5" ></text>
</g>
<g >
<title>runtime.traceLocker.ok (1 samples, 0.02%)</title><rect x="16.2" y="229" width="0.2" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="19.16" y="239.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (1 samples, 0.02%)</title><rect x="177.3" y="69" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="180.33" y="79.5" ></text>
</g>
<g >
<title>runtime.mPark (5 samples, 0.08%)</title><rect x="1188.1" y="181" width="0.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1191.07" y="191.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (2 samples, 0.03%)</title><rect x="17.9" y="197" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="20.89" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (26 samples, 0.42%)</title><rect x="191.6" y="133" width="5.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="194.58" y="143.5" ></text>
</g>
<g >
<title>runtime.chunkIndex (2 samples, 0.03%)</title><rect x="11.3" y="149" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="14.35" y="159.5" ></text>
</g>
<g >
<title>runtime.headTailIndex.head (1 samples, 0.02%)</title><rect x="13.3" y="213" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="16.27" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (7 samples, 0.11%)</title><rect x="13.1" y="229" width="1.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="16.08" y="239.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.02%)</title><rect x="1185.2" y="229" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1188.19" y="239.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (1 samples, 0.02%)</title><rect x="1187.1" y="165" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1190.11" y="175.5" ></text>
</g>
<g >
<title>main.GetSplit (167 samples, 2.73%)</title><rect x="303.5" y="245" width="32.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="306.46" y="255.5" >ma..</text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="1189.4" y="117" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1192.42" y="127.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (2 samples, 0.03%)</title><rect x="10.0" y="261" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.03%)</title><rect x="17.9" y="229" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="20.89" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (67 samples, 1.09%)</title><rect x="169.6" y="197" width="12.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="172.63" y="207.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.02%)</title><rect x="16.7" y="181" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="19.74" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (13 samples, 0.21%)</title><rect x="10.6" y="213" width="2.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="13.58" y="223.5" ></text>
</g>
<g >
<title>runtime.headTailIndex.head (1 samples, 0.02%)</title><rect x="197.4" y="133" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="200.36" y="143.5" ></text>
</g>
<g >
<title>runtime.tgkill (1 samples, 0.02%)</title><rect x="18.9" y="133" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="21.86" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (2 samples, 0.03%)</title><rect x="19.4" y="117" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="22.44" y="127.5" ></text>
</g>
<g >
<title>runtime.(*consistentHeapStats).acquire (1 samples, 0.02%)</title><rect x="15.6" y="213" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.58" y="223.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.02%)</title><rect x="1187.9" y="165" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1190.88" y="175.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.02%)</title><rect x="196.6" y="149" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="199.59" y="159.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).Scan (942 samples, 15.37%)</title><rect x="444.8" y="229" width="181.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="447.80" y="239.5" >bufio.(*Scanner).Scan</text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.02%)</title><rect x="19.1" y="133" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="22.05" y="143.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.03%)</title><rect x="1189.6" y="213" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1192.61" y="223.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (1 samples, 0.02%)</title><rect x="1185.2" y="245" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1188.19" y="255.5" ></text>
</g>
<g >
<title>runtime.newArenaMayUnlock (1 samples, 0.02%)</title><rect x="176.4" y="37" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="179.37" y="47.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (1 samples, 0.02%)</title><rect x="17.7" y="197" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="20.70" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (80 samples, 1.31%)</title><rect x="18.3" y="229" width="15.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="21.28" y="239.5" ></text>
</g>
<g >
<title>runtime.bgsweep (32 samples, 0.52%)</title><rect x="10.4" y="261" width="6.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="13.39" y="271.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.02%)</title><rect x="1189.0" y="181" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1192.04" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (5 samples, 0.08%)</title><rect x="179.3" y="165" width="0.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="182.26" y="175.5" ></text>
</g>
<g >
<title>runtime.bucketShift (26 samples, 0.42%)</title><rect x="735.2" y="229" width="5.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="738.18" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="16.7" y="133" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="19.74" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (13 samples, 0.21%)</title><rect x="10.6" y="229" width="2.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="13.58" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (9 samples, 0.15%)</title><rect x="10.8" y="181" width="1.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="13.77" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Pointer[go.shape.struct (1 samples, 0.02%)</title><rect x="13.5" y="213" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="16.47" y="223.5" ></text>
</g>
<g >
<title>runtime.scanblock (3 samples, 0.05%)</title><rect x="20.4" y="165" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="23.40" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.03%)</title><rect x="17.5" y="213" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="20.51" y="223.5" ></text>
</g>
<g >
<title>runtime.scanobject (56 samples, 0.91%)</title><rect x="21.0" y="197" width="10.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="23.98" y="207.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (6 samples, 0.10%)</title><rect x="178.1" y="149" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="181.10" y="159.5" ></text>
</g>
<g >
<title>runtime.gcStart (5 samples, 0.08%)</title><rect x="196.6" y="197" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="199.59" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.05%)</title><rect x="16.5" y="229" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="19.55" y="239.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.02%)</title><rect x="19.2" y="117" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="22.24" y="127.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (1 samples, 0.02%)</title><rect x="176.4" y="53" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="179.37" y="63.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (1 samples, 0.02%)</title><rect x="1185.2" y="181" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1188.19" y="191.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (3 samples, 0.05%)</title><rect x="573.2" y="133" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="576.23" y="143.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (69 samples, 1.13%)</title><rect x="183.3" y="197" width="13.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="186.30" y="207.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (2 samples, 0.03%)</title><rect x="15.8" y="213" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="18.78" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (2 samples, 0.03%)</title><rect x="25.4" y="181" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="28.40" y="191.5" ></text>
</g>
<g >
<title>runtime.memmove (139 samples, 2.27%)</title><rect x="202.6" y="213" width="26.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="205.56" y="223.5" >r..</text>
</g>
<g >
<title>runtime.(*gcWork).balance (1 samples, 0.02%)</title><rect x="191.6" y="101" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="194.58" y="111.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).advance (43 samples, 0.70%)</title><rect x="626.2" y="229" width="8.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="629.19" y="239.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="16.9" y="181" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="19.93" y="191.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.03%)</title><rect x="17.9" y="133" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="20.89" y="143.5" ></text>
</g>
<g >
<title>runtime.preemptM (1 samples, 0.02%)</title><rect x="18.5" y="165" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="21.47" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (48 samples, 0.78%)</title><rect x="171.2" y="181" width="9.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="174.17" y="191.5" ></text>
</g>
<g >
<title>runtime.add (150 samples, 2.45%)</title><rect x="706.3" y="229" width="28.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="709.29" y="239.5" >ru..</text>
</g>
<g >
<title>runtime.(*mspan).base (4 samples, 0.07%)</title><rect x="182.5" y="197" width="0.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="185.53" y="207.5" ></text>
</g>
<g >
<title>runtime.gcmarknewobject (1 samples, 0.02%)</title><rect x="197.6" y="197" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="200.55" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (11 samples, 0.18%)</title><rect x="180.4" y="181" width="2.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="183.41" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func2 (2 samples, 0.03%)</title><rect x="17.9" y="213" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="20.89" y="223.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (7 samples, 0.11%)</title><rect x="569.8" y="149" width="1.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="572.77" y="159.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier2 (1 samples, 0.02%)</title><rect x="625.6" y="213" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="628.61" y="223.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (25 samples, 0.41%)</title><rect x="191.8" y="85" width="4.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="194.78" y="95.5" ></text>
</g>
<g >
<title>runtime.(*scavengeIndex).free (1 samples, 0.02%)</title><rect x="11.2" y="149" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="14.16" y="159.5" ></text>
</g>
<g >
<title>runtime.signalM (1 samples, 0.02%)</title><rect x="18.5" y="149" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="21.47" y="159.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (2 samples, 0.03%)</title><rect x="17.9" y="165" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="20.89" y="175.5" ></text>
</g>
<g >
<title>runtime.notesleep (5 samples, 0.08%)</title><rect x="1188.1" y="165" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1191.07" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="1189.2" y="181" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1192.23" y="191.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.02%)</title><rect x="1187.1" y="197" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1190.11" y="207.5" ></text>
</g>
<g >
<title>runtime.schedule (11 samples, 0.18%)</title><rect x="1185.4" y="229" width="2.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1188.38" y="239.5" ></text>
</g>
<g >
<title>runtime.morestack (13 samples, 0.21%)</title><rect x="1187.5" y="261" width="2.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1190.50" y="271.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.02%)</title><rect x="17.7" y="149" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="20.70" y="159.5" ></text>
</g>
<g >
<title>os.(*File).wrapErr (1 samples, 0.02%)</title><rect x="571.7" y="197" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="574.69" y="207.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (13 samples, 0.21%)</title><rect x="1187.5" y="245" width="2.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1190.50" y="255.5" ></text>
</g>
<g >
<title>runtime.alignUp (10 samples, 0.16%)</title><rect x="76.6" y="213" width="2.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="79.63" y="223.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (9 samples, 0.15%)</title><rect x="14.4" y="229" width="1.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="17.43" y="239.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).reset (3 samples, 0.05%)</title><rect x="196.8" y="133" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="199.78" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (1 samples, 0.02%)</title><rect x="18.5" y="197" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="21.47" y="207.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.02%)</title><rect x="16.7" y="149" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="19.74" y="159.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (6 samples, 0.10%)</title><rect x="17.1" y="245" width="1.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="20.12" y="255.5" ></text>
</g>
<g >
<title>aeshashbody (427 samples, 6.97%)</title><rect x="1013.2" y="213" width="82.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1016.23" y="223.5" >aeshashbody</text>
</g>
<g >
<title>runtime.sweepone (31 samples, 0.51%)</title><rect x="10.4" y="245" width="6.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.39" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="1189.2" y="197" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1192.23" y="207.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (59 samples, 0.96%)</title><rect x="558.4" y="197" width="11.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="561.41" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.03%)</title><rect x="17.1" y="213" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="20.12" y="223.5" ></text>
</g>
<g >
<title>os.(*File).read (279 samples, 4.55%)</title><rect x="571.9" y="213" width="53.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="574.89" y="223.5" >os.(*..</text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (1 samples, 0.02%)</title><rect x="174.6" y="53" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="177.64" y="63.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.02%)</title><rect x="19.2" y="101" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="22.24" y="111.5" ></text>
</g>
<g >
<title>runtime.markroot (12 samples, 0.20%)</title><rect x="18.7" y="197" width="2.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="21.67" y="207.5" ></text>
</g>
<g >
<title>runtime.casgstatus (3 samples, 0.05%)</title><rect x="575.0" y="133" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="577.97" y="143.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).init (1 samples, 0.02%)</title><rect x="18.7" y="165" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="21.67" y="175.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.02%)</title><rect x="16.7" y="165" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="19.74" y="175.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (1 samples, 0.02%)</title><rect x="1185.4" y="197" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1188.38" y="207.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1 samples, 0.02%)</title><rect x="1185.2" y="213" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1188.19" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (30 samples, 0.49%)</title><rect x="172.1" y="165" width="5.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="175.13" y="175.5" ></text>
</g>
<g >
<title>runtime.releasem (40 samples, 0.65%)</title><rect x="295.8" y="213" width="7.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="298.76" y="223.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (2,307 samples, 37.65%)</title><rect x="740.2" y="229" width="444.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="743.18" y="239.5" >runtime.mapaccess2_faststr</text>
</g>
<g >
<title>runtime.makeSpanClass (6 samples, 0.10%)</title><rect x="83.9" y="213" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="86.94" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.03%)</title><rect x="1189.6" y="229" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1192.61" y="239.5" ></text>
</g>
<g >
<title>runtime.markroot (25 samples, 0.41%)</title><rect x="191.8" y="101" width="4.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="194.78" y="111.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.02%)</title><rect x="1187.9" y="133" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1190.88" y="143.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (1 samples, 0.02%)</title><rect x="12.3" y="165" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="15.31" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (8 samples, 0.13%)</title><rect x="174.8" y="53" width="1.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="177.83" y="63.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.02%)</title><rect x="1187.3" y="197" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1190.30" y="207.5" ></text>
</g>
<g >
<title>runtime.greyobject (6 samples, 0.10%)</title><rect x="26.4" y="181" width="1.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="29.37" y="191.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.02%)</title><rect x="1187.3" y="181" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1190.30" y="191.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="16.9" y="197" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="19.93" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).partialSwept (1 samples, 0.02%)</title><rect x="177.9" y="165" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="180.91" y="175.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).park (1 samples, 0.02%)</title><rect x="10.0" y="245" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>runtime.gcResetMarkState (1 samples, 0.02%)</title><rect x="196.6" y="165" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="199.59" y="175.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.02%)</title><rect x="17.7" y="117" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="20.70" y="127.5" ></text>
</g>
<g >
<title>runtime.spanClass.noscan (1 samples, 0.02%)</title><rect x="31.8" y="197" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="34.76" y="207.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (1 samples, 0.02%)</title><rect x="17.7" y="181" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="20.70" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocToCache (2 samples, 0.03%)</title><rect x="176.6" y="69" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="179.56" y="79.5" ></text>
</g>
<g >
<title>runtime.mPark (7 samples, 0.11%)</title><rect x="1185.8" y="197" width="1.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1188.76" y="207.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (4 samples, 0.07%)</title><rect x="196.8" y="165" width="0.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="199.78" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (27 samples, 0.44%)</title><rect x="172.3" y="101" width="5.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="175.33" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (1 samples, 0.02%)</title><rect x="177.7" y="117" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="180.72" y="127.5" ></text>
</g>
<g >
<title>runtime.preemptM (1 samples, 0.02%)</title><rect x="18.9" y="165" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="21.86" y="175.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (2 samples, 0.03%)</title><rect x="571.9" y="197" width="0.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="574.89" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (2 samples, 0.03%)</title><rect x="17.1" y="149" width="0.4" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="20.12" y="159.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.02%)</title><rect x="196.6" y="133" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="199.59" y="143.5" ></text>
</g>
<g >
<title>runtime.strhash (23 samples, 0.38%)</title><rect x="1180.0" y="213" width="4.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1182.99" y="223.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.02%)</title><rect x="12.9" y="165" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="15.89" y="175.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readLock (3 samples, 0.05%)</title><rect x="572.3" y="197" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="575.27" y="207.5" ></text>
</g>
<g >
<title>main.ParseTemp (333 samples, 5.43%)</title><rect x="634.5" y="229" width="64.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="637.47" y="239.5" >main.Pa..</text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (1 samples, 0.02%)</title><rect x="10.2" y="229" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="13.19" y="239.5" ></text>
</g>
<g >
<title>runtime.gcDrain (80 samples, 1.31%)</title><rect x="18.3" y="213" width="15.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="21.28" y="223.5" ></text>
</g>
<g >
<title>gcWriteBarrier (7 samples, 0.11%)</title><rect x="569.8" y="213" width="1.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="572.77" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (27 samples, 0.44%)</title><rect x="172.3" y="85" width="5.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="175.33" y="95.5" ></text>
</g>
<g >
<title>runtime.schedule (11 samples, 0.18%)</title><rect x="1187.5" y="213" width="2.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1190.50" y="223.5" ></text>
</g>
<g >
<title>runtime.park_m (11 samples, 0.18%)</title><rect x="1185.4" y="245" width="2.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1188.38" y="255.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (1 samples, 0.02%)</title><rect x="12.1" y="165" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="15.12" y="175.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (6 samples, 0.10%)</title><rect x="11.0" y="165" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="13.96" y="175.5" ></text>
</g>
<g >
<title>runtime.acquirem (50 samples, 0.82%)</title><rect x="67.0" y="213" width="9.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="70.00" y="223.5" ></text>
</g>
<g >
<title>os.(*File).Read (4 samples, 0.07%)</title><rect x="571.1" y="213" width="0.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="574.12" y="223.5" ></text>
</g>
<g >
<title>runtime.wirep (4 samples, 0.07%)</title><rect x="576.5" y="117" width="0.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="579.51" y="127.5" ></text>
</g>
<g >
<title>runtime.(*timeHistogram).record (1 samples, 0.02%)</title><rect x="575.4" y="117" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="578.35" y="127.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (1 samples, 0.02%)</title><rect x="16.4" y="245" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="19.35" y="255.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.02%)</title><rect x="12.9" y="181" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="15.89" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (8 samples, 0.13%)</title><rect x="181.0" y="165" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="183.99" y="175.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (24 samples, 0.39%)</title><rect x="197.9" y="197" width="4.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="200.94" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func1 (1 samples, 0.02%)</title><rect x="17.5" y="197" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="20.51" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (2 samples, 0.03%)</title><rect x="17.5" y="229" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="20.51" y="239.5" ></text>
</g>
<g >
<title>runtime.futexsleep (4 samples, 0.07%)</title><rect x="1188.3" y="149" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1191.27" y="159.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (7 samples, 0.11%)</title><rect x="569.8" y="165" width="1.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="572.77" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (14 samples, 0.23%)</title><rect x="173.9" y="69" width="2.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="176.87" y="79.5" ></text>
</g>
<g >
<title>runtime.forEachP (2 samples, 0.03%)</title><rect x="17.1" y="229" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="20.12" y="239.5" ></text>
</g>
<g >
<title>runtime.wirep (1 samples, 0.02%)</title><rect x="1187.3" y="165" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1190.30" y="175.5" ></text>
</g>
<g >
<title>runtime.gcstopm (1 samples, 0.02%)</title><rect x="1185.6" y="197" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1188.57" y="207.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (2 samples, 0.03%)</title><rect x="17.1" y="181" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="20.12" y="191.5" ></text>
</g>
<g >
<title>runtime.divRoundUp (2 samples, 0.03%)</title><rect x="78.6" y="213" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="81.55" y="223.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (8 samples, 0.13%)</title><rect x="18.7" y="181" width="1.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="21.67" y="191.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).initAt (1 samples, 0.02%)</title><rect x="18.7" y="149" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="21.67" y="159.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (9 samples, 0.15%)</title><rect x="575.5" y="133" width="1.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="578.55" y="143.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (7 samples, 0.11%)</title><rect x="569.8" y="197" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="572.77" y="207.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.03%)</title><rect x="12.5" y="165" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="15.50" y="175.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Bool).Load (1 samples, 0.02%)</title><rect x="573.8" y="133" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="576.81" y="143.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.03%)</title><rect x="625.8" y="213" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="628.80" y="223.5" ></text>
</g>
<g >
<title>runtime.getMCache (26 samples, 0.42%)</title><rect x="78.9" y="213" width="5.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="81.94" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.02%)</title><rect x="17.1" y="133" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="20.12" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).empty (1 samples, 0.02%)</title><rect x="17.5" y="181" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="20.51" y="191.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (13 samples, 0.21%)</title><rect x="10.6" y="197" width="2.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="13.58" y="207.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (14 samples, 0.23%)</title><rect x="574.6" y="149" width="2.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="577.58" y="159.5" ></text>
</g>
<g >
<title>runtime.futexsleep (2 samples, 0.03%)</title><rect x="17.9" y="149" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="20.89" y="159.5" ></text>
</g>
<g >
<title>runtime.mcall (12 samples, 0.20%)</title><rect x="1185.2" y="261" width="2.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1188.19" y="271.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (1 samples, 0.02%)</title><rect x="10.2" y="213" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.19" y="223.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.02%)</title><rect x="1189.4" y="165" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1192.42" y="175.5" ></text>
</g>
<g >
<title>runtime.findObject (3 samples, 0.05%)</title><rect x="25.8" y="181" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="28.79" y="191.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (2 samples, 0.03%)</title><rect x="177.5" y="149" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="180.53" y="159.5" ></text>
</g>
<g >
<title>runtime.(*bmap).keys (40 samples, 0.65%)</title><rect x="698.6" y="229" width="7.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="701.59" y="239.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.02%)</title><rect x="197.7" y="197" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="200.74" y="207.5" ></text>
</g>
</g>
</svg>
