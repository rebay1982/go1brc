<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>runtime.gcDrainMarkWorkerIdle (1,450 samples, 15.78%)</title><rect x="783.8" y="229" width="186.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="786.79" y="239.5" >runtime.gcDrainMarkWorke..</text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.01%)</title><rect x="515.2" y="117" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="518.20" y="127.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (1 samples, 0.01%)</title><rect x="1062.6" y="165" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1065.64" y="175.5" ></text>
</g>
<g >
<title>syscall.Syscall (225 samples, 2.45%)</title><rect x="998.3" y="181" width="28.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1001.32" y="191.5" >sy..</text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (10 samples, 0.11%)</title><rect x="854.4" y="181" width="1.3" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="857.40" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (58 samples, 0.63%)</title><rect x="847.0" y="181" width="7.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="849.95" y="191.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.01%)</title><rect x="515.2" y="133" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="518.20" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (2 samples, 0.02%)</title><rect x="452.2" y="149" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="455.16" y="159.5" ></text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.01%)</title><rect x="457.4" y="213" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="460.43" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).setSpans (1 samples, 0.01%)</title><rect x="457.0" y="117" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="460.04" y="127.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (34 samples, 0.37%)</title><rect x="450.6" y="181" width="4.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="453.62" y="191.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (15 samples, 0.16%)</title><rect x="964.2" y="181" width="1.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="967.17" y="191.5" ></text>
</g>
<g >
<title>runtime.usleep (5 samples, 0.05%)</title><rect x="1030.4" y="149" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1033.42" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mspan).objIndex (7 samples, 0.08%)</title><rect x="698.8" y="181" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="701.79" y="191.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (100 samples, 1.09%)</title><rect x="338.2" y="181" width="12.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="341.16" y="191.5" ></text>
</g>
<g >
<title>runtime.main (447 samples, 4.86%)</title><rect x="969.9" y="261" width="57.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="972.95" y="271.5" >runtim..</text>
</g>
<g >
<title>runtime.systemstack (114 samples, 1.24%)</title><rect x="336.4" y="213" width="14.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="339.36" y="223.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.01%)</title><rect x="647.3" y="165" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="650.31" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.01%)</title><rect x="1031.6" y="181" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1034.57" y="191.5" ></text>
</g>
<g >
<title>strings.genSplit (1,233 samples, 13.42%)</title><rect x="1031.7" y="245" width="158.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1034.70" y="255.5" >strings.genSplit</text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (1,062 samples, 11.55%)</title><rect x="647.4" y="229" width="136.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="650.44" y="239.5" >runtime.gcDrainMa..</text>
</g>
<g >
<title>runtime.gcMarkDone (1 samples, 0.01%)</title><rect x="647.3" y="245" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="650.31" y="255.5" ></text>
</g>
<g >
<title>runtime.recv.goready.func1 (3 samples, 0.03%)</title><rect x="646.3" y="181" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="649.28" y="191.5" ></text>
</g>
<g >
<title>runtime.futexsleep (12 samples, 0.13%)</title><rect x="1028.2" y="165" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1031.23" y="175.5" ></text>
</g>
<g >
<title>strings.Index (163 samples, 1.77%)</title><rect x="1100.9" y="229" width="20.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1103.90" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (9 samples, 0.10%)</title><rect x="969.9" y="197" width="1.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="972.95" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.02%)</title><rect x="970.8" y="149" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="973.84" y="159.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.01%)</title><rect x="647.3" y="149" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="650.31" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bytep (3 samples, 0.03%)</title><rect x="1061.9" y="165" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1064.87" y="175.5" ></text>
</g>
<g >
<title>runtime.memmove (240 samples, 2.61%)</title><rect x="515.3" y="229" width="30.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="518.33" y="239.5" >ru..</text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.02%)</title><rect x="1031.2" y="165" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1034.19" y="175.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.01%)</title><rect x="647.3" y="133" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="650.31" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcache).allocLarge (5 samples, 0.05%)</title><rect x="1073.3" y="197" width="0.6" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1076.30" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (46 samples, 0.50%)</title><rect x="841.0" y="181" width="6.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="844.05" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint8).Load (6 samples, 0.07%)</title><rect x="966.1" y="181" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="969.09" y="191.5" ></text>
</g>
<g >
<title>runtime.mcall (33 samples, 0.36%)</title><rect x="1027.3" y="261" width="4.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1030.33" y="271.5" ></text>
</g>
<g >
<title>runtime.gcDrain (1,450 samples, 15.78%)</title><rect x="783.8" y="213" width="186.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="786.79" y="223.5" >runtime.gcDrain</text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (14 samples, 0.15%)</title><rect x="697.0" y="181" width="1.8" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="700.00" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (5 samples, 0.05%)</title><rect x="341.1" y="165" width="0.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="344.11" y="175.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).run (2 samples, 0.02%)</title><rect x="646.7" y="245" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="649.67" y="255.5" ></text>
</g>
<g >
<title>runtime.schedule (32 samples, 0.35%)</title><rect x="1027.5" y="229" width="4.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1030.46" y="239.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.01%)</title><rect x="647.2" y="181" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="650.18" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).allocLarge (4 samples, 0.04%)</title><rect x="456.8" y="213" width="0.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="459.78" y="223.5" ></text>
</g>
<g >
<title>indexbytebody (480 samples, 5.22%)</title><rect x="1123.8" y="213" width="61.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1126.75" y="223.5" >indexb..</text>
</g>
<g >
<title>runtime.findObject (13 samples, 0.14%)</title><rect x="452.4" y="149" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="455.42" y="159.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (2 samples, 0.02%)</title><rect x="646.7" y="229" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="649.67" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.02%)</title><rect x="488.4" y="181" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="491.37" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (4 samples, 0.04%)</title><rect x="1073.4" y="133" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1076.43" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bytep (6 samples, 0.07%)</title><rect x="839.1" y="181" width="0.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="842.12" y="191.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (2 samples, 0.02%)</title><rect x="856.8" y="181" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="859.84" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (2,512 samples, 27.33%)</title><rect x="647.4" y="245" width="322.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="650.44" y="255.5" >runtime.systemstack</text>
</g>
<g >
<title>runtime.putempty (1 samples, 0.01%)</title><rect x="647.1" y="149" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="650.05" y="159.5" ></text>
</g>
<g >
<title>runtime.sysMapOS (2 samples, 0.02%)</title><rect x="514.4" y="101" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="517.43" y="111.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (2 samples, 0.02%)</title><rect x="488.4" y="133" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="491.37" y="143.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (1 samples, 0.01%)</title><rect x="338.0" y="181" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="341.03" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).grow (2 samples, 0.02%)</title><rect x="514.4" y="133" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="517.43" y="143.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.01%)</title><rect x="1031.4" y="197" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1034.44" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (4 samples, 0.04%)</title><rect x="456.8" y="149" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="459.78" y="159.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).done (1 samples, 0.01%)</title><rect x="1027.7" y="197" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1030.72" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.01%)</title><rect x="1065.1" y="149" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1068.08" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bytep (2 samples, 0.02%)</title><rect x="336.7" y="181" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="339.74" y="191.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (1 samples, 0.01%)</title><rect x="647.1" y="133" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="650.05" y="143.5" ></text>
</g>
<g >
<title>runtime.mmap (1 samples, 0.01%)</title><rect x="456.8" y="85" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="459.78" y="95.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (2 samples, 0.02%)</title><rect x="970.8" y="181" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="973.84" y="191.5" ></text>
</g>
<g >
<title>runtime.sysMapOS (1 samples, 0.01%)</title><rect x="970.1" y="69" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="973.07" y="79.5" ></text>
</g>
<g >
<title>main.main (447 samples, 4.86%)</title><rect x="969.9" y="245" width="57.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="972.95" y="255.5" >main.m..</text>
</g>
<g >
<title>main.Hash (1,165 samples, 12.68%)</title><rect x="126.6" y="261" width="149.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="129.57" y="271.5" >main.Hash</text>
</g>
<g >
<title>runtime.goready (3 samples, 0.03%)</title><rect x="646.3" y="213" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="649.28" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).grow (1 samples, 0.01%)</title><rect x="970.1" y="101" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="973.07" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (7 samples, 0.08%)</title><rect x="1065.2" y="149" width="0.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1068.21" y="159.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (2 samples, 0.02%)</title><rect x="1073.9" y="133" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1076.94" y="143.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.01%)</title><rect x="1027.2" y="197" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1030.21" y="207.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).alloc (1 samples, 0.01%)</title><rect x="457.2" y="133" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="460.17" y="143.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="646.3" y="133" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="649.28" y="143.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.01%)</title><rect x="514.9" y="117" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="517.94" y="127.5" ></text>
</g>
<g >
<title>runtime.sweepone (1 samples, 0.01%)</title><rect x="646.9" y="245" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="649.93" y="255.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (1 samples, 0.01%)</title><rect x="970.7" y="165" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="973.72" y="175.5" ></text>
</g>
<g >
<title>runtime.mmap (1 samples, 0.01%)</title><rect x="970.1" y="53" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="973.07" y="63.5" ></text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfUnchecked (1 samples, 0.01%)</title><rect x="699.7" y="181" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="702.69" y="191.5" ></text>
</g>
<g >
<title>runtime.tgkill (1 samples, 0.01%)</title><rect x="784.0" y="133" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="787.04" y="143.5" ></text>
</g>
<g >
<title>runtime.checkTimers (1 samples, 0.01%)</title><rect x="1030.2" y="181" width="0.1" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="1033.16" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint8).Load (8 samples, 0.09%)</title><rect x="780.2" y="181" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="783.19" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (6 samples, 0.07%)</title><rect x="337.0" y="181" width="0.8" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="340.00" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (34 samples, 0.37%)</title><rect x="692.6" y="181" width="4.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="695.63" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (5 samples, 0.05%)</title><rect x="969.9" y="133" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="972.95" y="143.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.01%)</title><rect x="1031.1" y="197" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1034.06" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (34 samples, 0.37%)</title><rect x="450.6" y="213" width="4.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="453.62" y="223.5" ></text>
</g>
<g >
<title>syscall.read (225 samples, 2.45%)</title><rect x="998.3" y="197" width="28.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1001.32" y="207.5" >sy..</text>
</g>
<g >
<title>runtime.signalM (1 samples, 0.01%)</title><rect x="784.0" y="149" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="787.04" y="159.5" ></text>
</g>
<g >
<title>runtime.sysMap (1 samples, 0.01%)</title><rect x="970.1" y="85" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="973.07" y="95.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.02%)</title><rect x="970.8" y="165" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="973.84" y="175.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.01%)</title><rect x="1073.9" y="85" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1076.94" y="95.5" ></text>
</g>
<g >
<title>runtime.findObject (305 samples, 3.32%)</title><rect x="701.0" y="181" width="39.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="703.98" y="191.5" >run..</text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.01%)</title><rect x="514.9" y="149" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="517.94" y="159.5" ></text>
</g>
<g >
<title>runtime.sysMapOS (1 samples, 0.01%)</title><rect x="1073.8" y="85" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1076.81" y="95.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (2 samples, 0.02%)</title><rect x="1073.9" y="197" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1076.94" y="207.5" ></text>
</g>
<g >
<title>runtime.mPark (12 samples, 0.13%)</title><rect x="1028.2" y="197" width="1.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1031.23" y="207.5" ></text>
</g>
<g >
<title>syscall.Read (225 samples, 2.45%)</title><rect x="998.3" y="213" width="28.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1001.32" y="223.5" >sy..</text>
</g>
<g >
<title>runtime.mallocgc (212 samples, 2.31%)</title><rect x="487.2" y="229" width="27.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="490.21" y="239.5" >r..</text>
</g>
<g >
<title>runtime.wbBufFlush (88 samples, 0.96%)</title><rect x="1061.4" y="213" width="11.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1064.36" y="223.5" ></text>
</g>
<g >
<title>runtime.nanotime (2 samples, 0.02%)</title><rect x="647.6" y="165" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="650.57" y="175.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.01%)</title><rect x="998.4" y="165" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1001.45" y="175.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (247 samples, 2.69%)</title><rect x="514.4" y="245" width="31.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="517.43" y="255.5" >ru..</text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.03%)</title><rect x="646.3" y="149" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="649.28" y="159.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (1 samples, 0.01%)</title><rect x="457.3" y="213" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="460.30" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (5 samples, 0.05%)</title><rect x="969.9" y="117" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="972.95" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (4 samples, 0.04%)</title><rect x="1061.4" y="165" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1064.36" y="175.5" ></text>
</g>
<g >
<title>runtime.greyobject (66 samples, 0.72%)</title><rect x="740.1" y="181" width="8.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="743.13" y="191.5" ></text>
</g>
<g >
<title>runtime.sysMapOS (1 samples, 0.01%)</title><rect x="456.8" y="101" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="459.78" y="111.5" ></text>
</g>
<g >
<title>gcWriteBarrier (103 samples, 1.12%)</title><rect x="1059.4" y="229" width="13.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1062.43" y="239.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.01%)</title><rect x="1030.3" y="181" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1033.29" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (2 samples, 0.02%)</title><rect x="488.4" y="149" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="491.37" y="159.5" ></text>
</g>
<g >
<title>runtime.chanrecv (3 samples, 0.03%)</title><rect x="646.3" y="229" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="649.28" y="239.5" ></text>
</g>
<g >
<title>runtime.sysMap (1 samples, 0.01%)</title><rect x="1073.8" y="101" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1076.81" y="111.5" ></text>
</g>
<g >
<title>runtime.resetspinning (2 samples, 0.02%)</title><rect x="1031.2" y="213" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1034.19" y="223.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.01%)</title><rect x="646.3" y="117" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="649.28" y="127.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.02%)</title><rect x="646.4" y="85" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="649.41" y="95.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (2 samples, 0.02%)</title><rect x="1066.1" y="149" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1069.11" y="159.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (2 samples, 0.02%)</title><rect x="646.7" y="261" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="649.67" y="271.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (1 samples, 0.01%)</title><rect x="647.1" y="181" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="650.05" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (2 samples, 0.02%)</title><rect x="970.8" y="117" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="973.84" y="127.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.02%)</title><rect x="1031.2" y="133" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1034.19" y="143.5" ></text>
</g>
<g >
<title>runtime.decoderune (28 samples, 0.30%)</title><rect x="272.6" y="245" width="3.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="275.55" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.01%)</title><rect x="515.2" y="165" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="518.20" y="175.5" ></text>
</g>
<g >
<title>runtime.findRunnable (27 samples, 0.29%)</title><rect x="1027.6" y="213" width="3.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1030.59" y="223.5" ></text>
</g>
<g >
<title>runtime.spanOf (106 samples, 1.15%)</title><rect x="931.8" y="181" width="13.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="934.81" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.01%)</title><rect x="515.2" y="181" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="518.20" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (1 samples, 0.01%)</title><rect x="1073.6" y="117" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1076.55" y="127.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.02%)</title><rect x="646.4" y="101" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="649.41" y="111.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.05%)</title><rect x="969.9" y="149" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="972.95" y="159.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.02%)</title><rect x="1031.2" y="181" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1034.19" y="191.5" ></text>
</g>
<g >
<title>runtime.sysMap (1 samples, 0.01%)</title><rect x="487.5" y="117" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="490.47" y="127.5" ></text>
</g>
<g >
<title>runtime.runqgrab (5 samples, 0.05%)</title><rect x="1030.4" y="165" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1033.42" y="175.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (200 samples, 2.18%)</title><rect x="488.8" y="213" width="25.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="491.75" y="223.5" >r..</text>
</g>
<g >
<title>runtime.(*pageAlloc).alloc (2 samples, 0.02%)</title><rect x="970.2" y="101" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="973.20" y="111.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.05%)</title><rect x="514.4" y="181" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="517.43" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).dispose (1 samples, 0.01%)</title><rect x="647.1" y="165" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="650.05" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (123 samples, 1.34%)</title><rect x="1073.3" y="213" width="15.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1076.30" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (2 samples, 0.02%)</title><rect x="1073.9" y="117" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1076.94" y="127.5" ></text>
</g>
<g >
<title>runtime.madvise (2 samples, 0.02%)</title><rect x="646.7" y="133" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="649.67" y="143.5" ></text>
</g>
<g >
<title>runtime.entersyscall (1 samples, 0.01%)</title><rect x="998.3" y="165" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1001.32" y="175.5" ></text>
</g>
<g >
<title>runtime.forEachP (2 samples, 0.02%)</title><rect x="647.1" y="245" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="650.05" y="255.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWriteSrcOnly (14 samples, 0.15%)</title><rect x="455.0" y="229" width="1.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="457.99" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (9 samples, 0.10%)</title><rect x="487.2" y="181" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="490.21" y="191.5" ></text>
</g>
<g >
<title>runtime.sysMap (2 samples, 0.02%)</title><rect x="514.4" y="117" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="517.43" y="127.5" ></text>
</g>
<g >
<title>runtime.park_m (33 samples, 0.36%)</title><rect x="1027.3" y="245" width="4.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1030.33" y="255.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.01%)</title><rect x="457.3" y="117" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="460.30" y="127.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.01%)</title><rect x="1073.9" y="53" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1076.94" y="63.5" ></text>
</g>
<g >
<title>runtime.memmove (153 samples, 1.66%)</title><rect x="467.6" y="229" width="19.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="470.57" y="239.5" ></text>
</g>
<g >
<title>runtime.mmap (2 samples, 0.02%)</title><rect x="514.4" y="85" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="517.43" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (4 samples, 0.04%)</title><rect x="456.8" y="165" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="459.78" y="175.5" ></text>
</g>
<g >
<title>os.(*File).read (225 samples, 2.45%)</title><rect x="998.3" y="229" width="28.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1001.32" y="239.5" >os..</text>
</g>
<g >
<title>runtime.deductAssistCredit (1 samples, 0.01%)</title><rect x="515.2" y="213" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="518.20" y="223.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.01%)</title><rect x="1031.6" y="165" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1034.57" y="175.5" ></text>
</g>
<g >
<title>runtime.addb (1 samples, 0.01%)</title><rect x="1062.5" y="165" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1065.51" y="175.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.EpollWait (2 samples, 0.02%)</title><rect x="1029.8" y="181" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1032.77" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (1 samples, 0.01%)</title><rect x="646.9" y="213" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="649.93" y="223.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.forEachP.func6 (1 samples, 0.01%)</title><rect x="647.3" y="197" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="650.31" y="207.5" ></text>
</g>
<g >
<title>runtime.ready (3 samples, 0.03%)</title><rect x="646.3" y="165" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="649.28" y="175.5" ></text>
</g>
<g >
<title>runtime.sysMmap (1 samples, 0.01%)</title><rect x="970.1" y="37" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="973.07" y="47.5" ></text>
</g>
<g >
<title>main.processChunk (221 samples, 2.40%)</title><rect x="969.9" y="229" width="28.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="972.95" y="239.5" >ma..</text>
</g>
<g >
<title>runtime.growslice (290 samples, 3.16%)</title><rect x="450.0" y="245" width="37.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="452.98" y="255.5" >run..</text>
</g>
<g >
<title>runtime.memmove (149 samples, 1.62%)</title><rect x="979.2" y="213" width="19.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="982.19" y="223.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (1 samples, 0.01%)</title><rect x="1074.1" y="85" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1077.07" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mSpanStateBox).get (5 samples, 0.05%)</title><rect x="686.6" y="181" width="0.6" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="689.60" y="191.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (2 samples, 0.02%)</title><rect x="272.3" y="245" width="0.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="275.29" y="255.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (20 samples, 0.22%)</title><rect x="781.2" y="197" width="2.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="784.22" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (5 samples, 0.05%)</title><rect x="1073.3" y="181" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1076.30" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (2 samples, 0.02%)</title><rect x="1029.8" y="165" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1032.77" y="175.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByteString (36 samples, 0.39%)</title><rect x="1185.4" y="213" width="4.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1188.38" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (34 samples, 0.37%)</title><rect x="450.6" y="197" width="4.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="453.62" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (5 samples, 0.05%)</title><rect x="514.4" y="165" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="517.43" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.02%)</title><rect x="488.4" y="197" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="491.37" y="207.5" ></text>
</g>
<g >
<title>runtime.mmap (1 samples, 0.01%)</title><rect x="1073.7" y="69" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1076.68" y="79.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.02%)</title><rect x="646.7" y="197" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="649.67" y="207.5" ></text>
</g>
<g >
<title>runtime.sysMmap (2 samples, 0.02%)</title><rect x="514.4" y="69" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="517.43" y="79.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.01%)</title><rect x="457.3" y="133" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="460.30" y="143.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocRange (1 samples, 0.01%)</title><rect x="457.2" y="117" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="460.17" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcache).allocLarge (6 samples, 0.07%)</title><rect x="514.4" y="213" width="0.8" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="517.43" y="223.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.01%)</title><rect x="970.6" y="165" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="973.59" y="175.5" ></text>
</g>
<g >
<title>countbody (92 samples, 1.00%)</title><rect x="1089.1" y="213" width="11.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1092.09" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (2 samples, 0.02%)</title><rect x="336.5" y="181" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="339.49" y="191.5" ></text>
</g>
<g >
<title>runtime.addb (1 samples, 0.01%)</title><rect x="451.3" y="165" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="454.26" y="175.5" ></text>
</g>
<g >
<title>runtime.addb (7 samples, 0.08%)</title><rect x="855.9" y="181" width="0.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="858.94" y="191.5" ></text>
</g>
<g >
<title>runtime.chansend1 (1 samples, 0.01%)</title><rect x="1027.2" y="229" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1030.21" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.01%)</title><rect x="515.2" y="149" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="518.20" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.04%)</title><rect x="456.8" y="181" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="459.78" y="191.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (1 samples, 0.01%)</title><rect x="449.5" y="245" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="452.47" y="255.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="647.2" y="133" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="650.18" y="143.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (2 samples, 0.02%)</title><rect x="647.6" y="181" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="650.57" y="191.5" ></text>
</g>
<g >
<title>runtime.scanobject (2 samples, 0.02%)</title><rect x="488.4" y="117" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="491.37" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (4 samples, 0.04%)</title><rect x="1073.4" y="149" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1076.43" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (1 samples, 0.01%)</title><rect x="487.9" y="117" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="490.85" y="127.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (28 samples, 0.30%)</title><rect x="451.4" y="165" width="3.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="454.39" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).objIndex (2 samples, 0.02%)</title><rect x="855.7" y="181" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="858.68" y="191.5" ></text>
</g>
<g >
<title>runtime.chansend (1 samples, 0.01%)</title><rect x="1027.2" y="213" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1030.21" y="223.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (2 samples, 0.02%)</title><rect x="647.1" y="197" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="650.05" y="207.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (1 samples, 0.01%)</title><rect x="971.0" y="69" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="973.97" y="79.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.01%)</title><rect x="1073.9" y="101" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1076.94" y="111.5" ></text>
</g>
<g >
<title>runtime.findObject (36 samples, 0.39%)</title><rect x="1066.4" y="149" width="4.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1069.36" y="159.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.01%)</title><rect x="647.2" y="149" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="650.18" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mSpanStateBox).get (9 samples, 0.10%)</title><rect x="839.9" y="181" width="1.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="842.89" y="191.5" ></text>
</g>
<g >
<title>runtime.markroot (2 samples, 0.02%)</title><rect x="647.6" y="197" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="650.57" y="207.5" ></text>
</g>
<g >
<title>memeqbody (555 samples, 6.04%)</title><rect x="48.6" y="245" width="71.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="51.64" y="255.5" >memeqbody</text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.03%)</title><rect x="646.3" y="197" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="649.28" y="207.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.01%)</title><rect x="970.8" y="69" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="973.84" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mspan).objIndex (1 samples, 0.01%)</title><rect x="342.8" y="165" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="345.78" y="175.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (20 samples, 0.22%)</title><rect x="928.3" y="181" width="2.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="931.35" y="191.5" ></text>
</g>
<g >
<title>runtime.growslice (72 samples, 0.78%)</title><rect x="969.9" y="213" width="9.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="972.95" y="223.5" ></text>
</g>
<g >
<title>runtime.makeslice (123 samples, 1.34%)</title><rect x="1073.3" y="229" width="15.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1076.30" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (4 samples, 0.04%)</title><rect x="514.4" y="149" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="517.43" y="159.5" ></text>
</g>
<g >
<title>runtime.(*wbBuf).get1 (39 samples, 0.42%)</title><rect x="450.0" y="229" width="5.0" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="452.98" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).allocLarge (7 samples, 0.08%)</title><rect x="969.9" y="181" width="0.9" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="972.95" y="191.5" ></text>
</g>
<g >
<title>runtime.greyobject (64 samples, 0.70%)</title><rect x="920.1" y="181" width="8.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="923.13" y="191.5" ></text>
</g>
<g >
<title>runtime.findObject (491 samples, 5.34%)</title><rect x="857.1" y="181" width="63.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="860.09" y="191.5" >runtim..</text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (1 samples, 0.01%)</title><rect x="969.9" y="85" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="972.95" y="95.5" ></text>
</g>
<g >
<title>runtime.spanOf (12 samples, 0.13%)</title><rect x="349.5" y="165" width="1.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="352.45" y="175.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (2 samples, 0.02%)</title><rect x="646.7" y="213" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="649.67" y="223.5" ></text>
</g>
<g >
<title>runtime.makeslice (212 samples, 2.31%)</title><rect x="487.2" y="245" width="27.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="490.21" y="255.5" >r..</text>
</g>
<g >
<title>runtime.sysReserveOS (1 samples, 0.01%)</title><rect x="1073.7" y="85" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1076.68" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mcache).allocLarge (9 samples, 0.10%)</title><rect x="487.2" y="213" width="1.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="490.21" y="223.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (113 samples, 1.23%)</title><rect x="336.5" y="197" width="14.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="339.49" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (114 samples, 1.24%)</title><rect x="336.4" y="229" width="14.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="339.36" y="239.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (1 samples, 0.01%)</title><rect x="646.9" y="229" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="649.93" y="239.5" ></text>
</g>
<g >
<title>main.(*HashMap).Add (25 samples, 0.27%)</title><rect x="10.0" y="261" width="3.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.02%)</title><rect x="1073.9" y="181" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1076.94" y="191.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.01%)</title><rect x="1027.3" y="229" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1030.33" y="239.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (1 samples, 0.01%)</title><rect x="998.3" y="149" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1001.32" y="159.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier2 (3 samples, 0.03%)</title><rect x="1072.9" y="229" width="0.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1075.91" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).setSpans (1 samples, 0.01%)</title><rect x="487.7" y="117" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="490.73" y="127.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocRange (1 samples, 0.01%)</title><rect x="970.2" y="85" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="973.20" y="95.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="514.9" y="101" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="517.94" y="111.5" ></text>
</g>
<g >
<title>runtime.memmove (23 samples, 0.25%)</title><rect x="976.2" y="197" width="3.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="979.24" y="207.5" ></text>
</g>
<g >
<title>strings.Split (1,233 samples, 13.42%)</title><rect x="1031.7" y="261" width="158.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1034.70" y="271.5" >strings.Split</text>
</g>
<g >
<title>runtime.gcDrainN (2 samples, 0.02%)</title><rect x="970.8" y="101" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="973.84" y="111.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (3 samples, 0.03%)</title><rect x="450.6" y="165" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="453.62" y="175.5" ></text>
</g>
<g >
<title>runtime.mmap (1 samples, 0.01%)</title><rect x="1073.8" y="69" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1076.81" y="79.5" ></text>
</g>
<g >
<title>runtime.sysUnused (2 samples, 0.02%)</title><rect x="646.7" y="165" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="649.67" y="175.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.01%)</title><rect x="784.2" y="197" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="787.17" y="207.5" ></text>
</g>
<g >
<title>runtime.spanOf (7 samples, 0.08%)</title><rect x="454.1" y="149" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="457.09" y="159.5" ></text>
</g>
<g >
<title>runtime.sysMmap (1 samples, 0.01%)</title><rect x="1073.8" y="53" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1076.81" y="63.5" ></text>
</g>
<g >
<title>main.parseTemp (767 samples, 8.35%)</title><rect x="351.0" y="245" width="98.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="353.99" y="255.5" >main.parseT..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (78 samples, 0.85%)</title><rect x="457.6" y="213" width="10.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="460.56" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.01%)</title><rect x="515.2" y="101" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="518.20" y="111.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).alloc (3 samples, 0.03%)</title><rect x="488.0" y="133" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="490.98" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (1 samples, 0.01%)</title><rect x="784.0" y="197" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="787.04" y="207.5" ></text>
</g>
<g >
<title>runtime.memequal (51 samples, 0.55%)</title><rect x="120.0" y="245" width="6.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="123.03" y="255.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (3 samples, 0.03%)</title><rect x="700.6" y="181" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="703.59" y="191.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (8 samples, 0.09%)</title><rect x="779.2" y="181" width="1.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="782.16" y="191.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.01%)</title><rect x="1074.1" y="101" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1077.07" y="111.5" ></text>
</g>
<g >
<title>runtime.mallocgc (7 samples, 0.08%)</title><rect x="514.4" y="229" width="0.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="517.43" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (1 samples, 0.01%)</title><rect x="969.9" y="101" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="972.95" y="111.5" ></text>
</g>
<g >
<title>runtime.stealWork (8 samples, 0.09%)</title><rect x="1030.0" y="197" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1033.03" y="207.5" ></text>
</g>
<g >
<title>runtime.spanOf (13 samples, 0.14%)</title><rect x="1071.0" y="149" width="1.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1073.99" y="159.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (146 samples, 1.59%)</title><rect x="945.4" y="181" width="18.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="948.42" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.01%)</title><rect x="647.3" y="213" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="650.31" y="223.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.02%)</title><rect x="1031.2" y="149" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1034.19" y="159.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (1 samples, 0.01%)</title><rect x="119.9" y="245" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="122.90" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (2 samples, 0.02%)</title><rect x="1062.3" y="165" width="0.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1065.26" y="175.5" ></text>
</g>
<g >
<title>runtime.scanobject (2 samples, 0.02%)</title><rect x="970.8" y="85" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="973.84" y="95.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.01%)</title><rect x="1031.6" y="213" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1034.57" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBitsSmallForAddr (1 samples, 0.01%)</title><rect x="699.7" y="165" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="702.69" y="175.5" ></text>
</g>
<g >
<title>strings.Count (92 samples, 1.00%)</title><rect x="1089.1" y="229" width="11.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1092.09" y="239.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).find (1 samples, 0.01%)</title><rect x="970.3" y="85" width="0.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="973.33" y="95.5" ></text>
</g>
<g >
<title>runtime.sysMmap (1 samples, 0.01%)</title><rect x="487.5" y="69" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="490.47" y="79.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (2 samples, 0.02%)</title><rect x="646.7" y="181" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="649.67" y="191.5" ></text>
</g>
<g >
<title>runtime.readUintptr (2 samples, 0.02%)</title><rect x="749.4" y="181" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="752.38" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (65 samples, 0.71%)</title><rect x="830.8" y="181" width="8.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="833.77" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.forEachP.func5 (2 samples, 0.02%)</title><rect x="647.1" y="213" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="650.05" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (84 samples, 0.91%)</title><rect x="456.8" y="229" width="10.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="459.78" y="239.5" ></text>
</g>
<g >
<title>runtime.chanrecv2 (3 samples, 0.03%)</title><rect x="646.3" y="245" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="649.28" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).grow (2 samples, 0.02%)</title><rect x="1073.7" y="117" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1076.68" y="127.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (116 samples, 1.26%)</title><rect x="1074.2" y="197" width="14.9" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1077.20" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.01%)</title><rect x="488.5" y="101" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="491.50" y="111.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (223 samples, 2.43%)</title><rect x="998.6" y="149" width="28.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1001.58" y="159.5" >ru..</text>
</g>
<g >
<title>runtime.asyncPreempt (1 samples, 0.01%)</title><rect x="449.3" y="229" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="452.34" y="239.5" ></text>
</g>
<g >
<title>runtime.morestack (1 samples, 0.01%)</title><rect x="1031.6" y="261" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1034.57" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (5 samples, 0.05%)</title><rect x="514.4" y="197" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="517.43" y="207.5" ></text>
</g>
<g >
<title>runtime.notesleep (12 samples, 0.13%)</title><rect x="1028.2" y="181" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1031.23" y="191.5" ></text>
</g>
<g >
<title>main.getSplit (295 samples, 3.21%)</title><rect x="546.1" y="261" width="37.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="549.14" y="271.5" >mai..</text>
</g>
<g >
<title>runtime.gcWriteBarrier2 (3 samples, 0.03%)</title><rect x="449.6" y="245" width="0.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="452.60" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pageBits).popcntRange (1 samples, 0.01%)</title><rect x="970.2" y="69" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="973.20" y="79.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.02%)</title><rect x="647.1" y="229" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="650.05" y="239.5" ></text>
</g>
<g >
<title>runtime.sysMmap (1 samples, 0.01%)</title><rect x="456.8" y="69" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="459.78" y="79.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.02%)</title><rect x="646.4" y="133" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="649.41" y="143.5" ></text>
</g>
<g >
<title>runtime.findObject (44 samples, 0.48%)</title><rect x="343.8" y="165" width="5.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="346.80" y="175.5" ></text>
</g>
<g >
<title>main.chunkWorker (2,103 samples, 22.88%)</title><rect x="276.1" y="261" width="270.0" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="279.15" y="271.5" >main.chunkWorker</text>
</g>
<g >
<title>runtime.sysMmap (1 samples, 0.01%)</title><rect x="1073.7" y="53" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1076.68" y="63.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.02%)</title><rect x="1031.2" y="197" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1034.19" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (9 samples, 0.10%)</title><rect x="487.2" y="149" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="490.21" y="159.5" ></text>
</g>
<g >
<title>runtime.spanOfUnchecked (1 samples, 0.01%)</title><rect x="966.9" y="197" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="969.86" y="207.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (1 samples, 0.01%)</title><rect x="1073.6" y="101" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1076.55" y="111.5" ></text>
</g>
<g >
<title>runtime.futex (12 samples, 0.13%)</title><rect x="1028.2" y="149" width="1.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1031.23" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).grow (1 samples, 0.01%)</title><rect x="456.8" y="133" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="459.78" y="143.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="647.3" y="117" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="650.31" y="127.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.01%)</title><rect x="457.3" y="149" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="460.30" y="159.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (2 samples, 0.02%)</title><rect x="488.4" y="213" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="491.37" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (42 samples, 0.46%)</title><rect x="687.2" y="181" width="5.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="690.24" y="191.5" ></text>
</g>
<g >
<title>gcWriteBarrier (150 samples, 1.63%)</title><rect x="331.7" y="245" width="19.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="334.74" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.02%)</title><rect x="1073.9" y="165" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1076.94" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (40 samples, 0.44%)</title><rect x="681.1" y="181" width="5.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="684.08" y="191.5" ></text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.01%)</title><rect x="488.6" y="213" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="491.62" y="223.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (223 samples, 2.43%)</title><rect x="998.6" y="165" width="28.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1001.58" y="175.5" >sy..</text>
</g>
<g >
<title>runtime.suspendG (1 samples, 0.01%)</title><rect x="1073.9" y="69" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1076.94" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (9 samples, 0.10%)</title><rect x="487.2" y="197" width="1.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="490.21" y="207.5" ></text>
</g>
<g >
<title>runtime.readUintptr (7 samples, 0.08%)</title><rect x="930.9" y="181" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="933.92" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.01%)</title><rect x="515.2" y="197" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="518.20" y="207.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).alloc (2 samples, 0.02%)</title><rect x="514.7" y="133" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="517.69" y="143.5" ></text>
</g>
<g >
<title>runtime.forEachP (1 samples, 0.01%)</title><rect x="647.3" y="229" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="650.31" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (77 samples, 0.84%)</title><rect x="1062.8" y="165" width="9.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1065.77" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bytep (3 samples, 0.03%)</title><rect x="686.2" y="181" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="689.21" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (8 samples, 0.09%)</title><rect x="341.8" y="165" width="1.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="344.75" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (4 samples, 0.04%)</title><rect x="456.8" y="197" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="459.78" y="207.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (4 samples, 0.04%)</title><rect x="456.3" y="213" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="459.27" y="223.5" ></text>
</g>
<g >
<title>runtime.spanAllocType.manual (1 samples, 0.01%)</title><rect x="970.5" y="101" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="973.46" y="111.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).find (1 samples, 0.01%)</title><rect x="514.7" y="117" width="0.1" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="517.69" y="127.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).find (2 samples, 0.02%)</title><rect x="488.1" y="117" width="0.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="491.11" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (1 samples, 0.01%)</title><rect x="487.2" y="133" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="490.21" y="143.5" ></text>
</g>
<g >
<title>all (9,191 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.02%)</title><rect x="1029.8" y="197" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1032.77" y="207.5" ></text>
</g>
<g >
<title>runtime.addb (2 samples, 0.02%)</title><rect x="337.8" y="181" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="340.77" y="191.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (1 samples, 0.01%)</title><rect x="647.3" y="181" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="650.31" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).sysAlloc (1 samples, 0.01%)</title><rect x="1073.7" y="101" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1076.68" y="111.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (40 samples, 0.44%)</title><rect x="971.1" y="197" width="5.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="974.10" y="207.5" ></text>
</g>
<g >
<title>runtime.scanobject (1,039 samples, 11.30%)</title><rect x="647.8" y="197" width="133.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="650.82" y="207.5" >runtime.scanobject</text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.02%)</title><rect x="646.4" y="117" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="649.41" y="127.5" ></text>
</g>
<g >
<title>runtime.preemptM (1 samples, 0.01%)</title><rect x="784.0" y="165" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="787.04" y="175.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="1031.1" y="213" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1034.06" y="223.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (23 samples, 0.25%)</title><rect x="967.0" y="197" width="2.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="969.99" y="207.5" ></text>
</g>
<g >
<title>runtime.mmap (1 samples, 0.01%)</title><rect x="487.5" y="85" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="490.47" y="95.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (2 samples, 0.02%)</title><rect x="1072.7" y="229" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1075.65" y="239.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.01%)</title><rect x="1031.6" y="229" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1034.57" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (88 samples, 0.96%)</title><rect x="1061.4" y="181" width="11.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1064.36" y="191.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (3 samples, 0.03%)</title><rect x="1027.8" y="197" width="0.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1030.85" y="207.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.01%)</title><rect x="515.1" y="197" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="518.07" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (2 samples, 0.02%)</title><rect x="970.8" y="133" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="973.84" y="143.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (6 samples, 0.07%)</title><rect x="748.6" y="181" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="751.61" y="191.5" ></text>
</g>
<g >
<title>strings.IndexByte (531 samples, 5.78%)</title><rect x="1121.8" y="229" width="68.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1124.83" y="239.5" >strings..</text>
</g>
<g >
<title>main.(*HashMap).Get (883 samples, 9.61%)</title><rect x="13.2" y="261" width="113.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="16.21" y="271.5" >main.(*HashMap..</text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="1031.6" y="197" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1034.57" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.01%)</title><rect x="457.3" y="197" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="460.30" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).grow (2 samples, 0.02%)</title><rect x="487.3" y="133" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="490.34" y="143.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).chunkOf (1 samples, 0.01%)</title><rect x="488.0" y="117" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="490.98" y="127.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (1 samples, 0.01%)</title><rect x="1031.6" y="245" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1034.57" y="255.5" ></text>
</g>
<g >
<title>runtime.chunkIdx.l2 (1 samples, 0.01%)</title><rect x="514.8" y="117" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="517.82" y="127.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (2 samples, 0.02%)</title><rect x="646.7" y="149" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="649.67" y="159.5" ></text>
</g>
<g >
<title>runtime.addb (6 samples, 0.07%)</title><rect x="699.8" y="181" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="702.82" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (5 samples, 0.05%)</title><rect x="969.9" y="165" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="972.95" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (3 samples, 0.03%)</title><rect x="487.6" y="133" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="490.60" y="143.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (2 samples, 0.02%)</title><rect x="488.4" y="165" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="491.37" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (2 samples, 0.02%)</title><rect x="1073.9" y="149" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1076.94" y="159.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.01%)</title><rect x="1031.4" y="213" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1034.44" y="223.5" ></text>
</g>
<g >
<title>runtime.spanOf (89 samples, 0.97%)</title><rect x="749.6" y="181" width="11.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="752.63" y="191.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.01%)</title><rect x="647.2" y="165" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="650.18" y="175.5" ></text>
</g>
<g >
<title>runtime.runqsteal (5 samples, 0.05%)</title><rect x="1030.4" y="181" width="0.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1033.42" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (1 samples, 0.01%)</title><rect x="784.0" y="181" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="787.04" y="191.5" ></text>
</g>
<g >
<title>runtime.sysMap (1 samples, 0.01%)</title><rect x="456.8" y="117" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="459.78" y="127.5" ></text>
</g>
<g >
<title>runtime.sysMapOS (1 samples, 0.01%)</title><rect x="487.5" y="101" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="490.47" y="111.5" ></text>
</g>
<g >
<title>runtime.bgsweep (1 samples, 0.01%)</title><rect x="646.9" y="261" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="649.93" y="271.5" ></text>
</g>
<g >
<title>runtime.scanobject (1,422 samples, 15.47%)</title><rect x="784.3" y="197" width="182.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="787.30" y="207.5" >runtime.scanobject</text>
</g>
<g >
<title>runtime.arenaIndex (7 samples, 0.08%)</title><rect x="342.9" y="165" width="0.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="345.91" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.05%)</title><rect x="1073.3" y="165" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1076.30" y="175.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.01%)</title><rect x="1027.2" y="181" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1030.21" y="191.5" ></text>
</g>
<g >
<title>main.resultsAggregator (488 samples, 5.31%)</title><rect x="584.0" y="261" width="62.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="587.02" y="271.5" >main.r..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.01%)</title><rect x="457.3" y="181" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="460.30" y="191.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.01%)</title><rect x="514.9" y="133" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="517.94" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (88 samples, 0.96%)</title><rect x="1061.4" y="197" width="11.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1064.36" y="207.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.01%)</title><rect x="457.3" y="101" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="460.30" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (9 samples, 0.10%)</title><rect x="487.2" y="165" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.21" y="175.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (141 samples, 1.53%)</title><rect x="761.1" y="181" width="18.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="764.06" y="191.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (2,515 samples, 27.36%)</title><rect x="647.1" y="261" width="322.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="650.05" y="271.5" >runtime.gcBgMarkWorker</text>
</g>
<g >
<title>runtime.gcDrain (1,062 samples, 11.55%)</title><rect x="647.4" y="213" width="136.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="650.44" y="223.5" >runtime.gcDrain</text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (2 samples, 0.02%)</title><rect x="451.0" y="165" width="0.3" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="454.01" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (2 samples, 0.02%)</title><rect x="456.9" y="133" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="459.91" y="143.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.01%)</title><rect x="457.3" y="165" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="460.30" y="175.5" ></text>
</g>
</g>
</svg>
